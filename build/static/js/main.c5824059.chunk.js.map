{"version":3,"sources":["firebase.js","Components/Window/UploadTrack.js","Components/Window/WaveForm.js","Components/Window/AccountView.js","Components/Window/CommentObject.js","Components/Window/Conversations.js","Components/HeaderMenu.js","Components/Window/AccountSettings.js","Components/Window/UserCard.js","Components/Window/BrowseUsers.js","Components/3d/speaker.glb","Components/ThreeBackground.js","Components/Window/NewAccount.js","Components/Window/Match.js","Components/Window/Introduction.js","Components/Window/Login.js","Components/Header.js","Components/Window/MainWindowController.js","Styles.js","Theme.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","useEmulator","auth","storage","UploadTrack","props","handleFileSelect","event","fileInput","current","files","state","audioFile","setState","drawPreview","preventDefault","handleChange","target","name","match","metaDataArr","trackMetaData","index","parseInt","id","checked","value","metaDataOther","handleTrackSubmit","newFolderID","newVersionFolder","ref","push","key","newTrackID","newAudioFile","storageRef","child","userID","router","setLoadingState","set","folderID","trackID","trackname","trackName","description","trackDescription","metadata","commentdata","trackCommentData","catch","error","alert","put","then","snapshot","console","log","updateContent","user","getUserID","args","waveObj","isChild","preview","controller","audiofile","trackPreviewPlayer","other","loadingProgress","bind","showLoadingProgress","React","createRef","previewRef","this","Grow","in","Box","display","flexDirection","justifyContent","height","textAlign","CardHeader","title","Collapse","pb","onSubmit","alignItems","className","getStyles","FormControl","Tooltip","arrow","placement","Input","type","inputProps","accept","required","onChange","startAdornment","InputAdornment","TextField","label","placeholder","size","FormControlLabel","control","Checkbox","onClick","maxLength","Button","variant","Component","CommentSection","listComments","commentArray","map","newComment","author","comment","body","player","MakeWave","waveformRef","useRef","timelineRef","playerHeight","useEffect","wavesurfer","WaveSurfer","create","container","progressColor","waveColor","responsive","plugins","TimelinePlugin","timeInterval","CursorPlugin","showTime","opacity","RegionsPlugin","regionsMinLength","asPreview","enableDragSelection","color","on","handleReady","setTime","progress","setLoadingProgress","region","substring","indexOf","parsed","length","regionUser","val","identifierObj","xPos","mouseEvent","pageX","identifier","File","loadBlob","getDownloadURL","url","xhr","XMLHttpRequest","responseType","onload","response","open","send","load","position","zIndex","style","marginTop","pointerEvents","MetaDataSection","array","dataArray","colors","data","mx","Chip","backgroundColor","WaveForm","handleTextChange","commentContent","previewRegion","checkRegions","handleCommentSubmit","expand","toggleExpand","newCommentData","newArr","commentArr","concat","update","inputTime","drawExistingRegions","playState","trackIsPreview","playerObject","playerDuration","currentTime","containsPreviews","metaData","regionIdentifier","authorControls","setRegionIdentifier","trackRef","trackParse","stopPlay","login","remove","delete","getTracks","currentRegions","regions","list","Object","keys","forEach","includes","clearRegions","parseCommentObjects","timeRegex","RegExp","found","JSON","stringify","timeString","duration","split","from","to","fromSplit","startTime","toSplit","endTime","trackDuration","getDuration","addRegion","Math","random","toString","start","end","resize","drag","clearPreviewRegions","count","wasFound","previewCheck","startCheck","Date","toISOString","substr","endCheck","time","str","minutes","seconds","getCurrentTime","togglePlay","startConvert","endConvert","newTimeStr","pause","playFromTime","getSeconds","play","playPause","getPrevPlayer","setPrevPlayer","IconButton","edge","marginRight","children","width","padding","paddingLeft","margin","fontSize","Paper","left","visibility","newTrackVersion","transform","deleteTrack","CircularProgress","collapsedHeight","marginLeft","flexWrap","require","AccountView","prevPlayer","userDisplayName","userDescription","userGenres","userRole","userLocation","userAudio","userTracks","avatarURL","userPrivacySettings","newTracksArr","folders","folder","currentFolder","total","values","track","newTrackFile","reverse","userRef","userParse","displayname","genres","parse","roles","location","audio","privacysettings","avatarRef","Slide","direction","Avatar","src","filter","role","join","Table","TableBody","TableRow","TableCell","align","Fade","timeout","currentUser","email","CommentObject","commentString","token","clickable","playFrom","borderColor","minWidth","elevation","borderRadius","AccountCircleOutlined","parsedComment","ActiveConvoSection","listConvos","convos","convo","asdf","setActive","Divider","MessageSection","listMessages","messageArray","newMessage","Conversations","setConvo","setCurrentConvo","currentMessages","userConvos","userIndex","entries","setCurrentMessages","currentConvo","messages","handleMessageSend","messageContent","receiverLocation","senderLocation","newMessageData","newCurrentMessages","convoNames","activeConvos","exportVal","conversations","off","mr","overflowY","mt","fullWidth","HeaderMenu","useState","setOpen","anchorRef","handleClose","contains","accountView","header","accountSettings","viewMessages","logOut","signOut","prevOpen","focus","Popper","anchorEl","transition","TransitionProps","transformOrigin","square","ClickAwayListener","onClickAway","MenuList","autoFocusItem","hidden","MenuItem","light","AccountSettings","submitChanges","userRoles","avatarImage","URL","createObjectURL","changesMade","settings","userEmail","selection","alignSelf","AccountCircle","settingLabels","setting","disabled","UserCard","avatarLocation","m","Card","p","displayName","BrowseUsers","userList","users","getUsers","uRef","getUsersArr","parsedRoles","parsedSettings","userElement","Grid","justify","scene","THREE","ThreeBackground","camera","window","innerWidth","innerHeight","renderer","alpha","antialias","setSize","appendChild","domElement","addEventListener","aspect","updateProjectionMatrix","material","GLTFLoader","speaker","gltf","needsUpdate","add","animations","mixer","clock","clip","clipAction","scale","composer","EffectComposer","addPass","RenderPass","animate","getDelta","requestAnimationFrame","rotation","y","render","undefined","z","setViewOffset","clear","refNode","steps","NewAccount","privacy","handleAccountCreation","userData","credential","EmailAuthProvider","userPassword","linkWithCredential","usercred","uid","setUser","createUserWithEmailAndPassword","userCredential","returnButton","previousHandler","backButton","activeStep","inProp","nextButton","slideStep","onExited","defaultChecked","Stepper","alternativeLabel","Step","StepLabel","orientation","initialState","matching","sectionValid","matchingStatus","trackIsPublic","trackMatchPlayer","mFolderID","mTrackID","mTrackName","mMetaData","mTrackDescription","currentUserID","currentFolderID","currentTrackID","reviewedTrackPlayer","matchedUserID","keepTracks","anonymousID","Match","cleanup","Promise","resolve","reject","message","matchAgain","checkSection","drawMatchTrack","matchingRef","matchingListener","matchObj","usersRef","matchID","usersListener","exists","trackData","handleMatch","newSessionID","anonymousAuth","signInAnonymously","onAuthStateChanged","createMatchSession","fRef","test","matchData","newMatchUserRef","limitToLast","newMatchUserListener","matchObject","currentUserRef","currentUserListener","matchedUser","finishReview","reviewedTrack","alignContent","disableHoverListener","Introduction","newAccount","startMatch","titleTypographyProps","mb","endIcon","DoubleArrow","Login","handleLogin","signInWithEmailAndPassword","username","password","Header","startIcon","uploadTrack","browseUsers","Link","component","introduction","MainWindowController","content","prevContent","nextContent","refresh","isLoading","styleProvider","styleProviderClass","headerBar","controllerRef","goToPrevious","getUserState","offsetWidth","userState","userObj","refreshWindow","reload","isAnonymous","Backdrop","darkBlue","blueGreyFade","blueGrey","styles","b_AccentPrimary","amber","b_AccentSecondary","b_Introduction","b_MainWindow","b_AccountCircle","b_MenuIcon","divider","marginBottom","headerMenu","formContent","secondary","mainBackground","top","right","bottom","theme","createTheme","palette","primary","main","overrides","MuiButton","root","textTransform","fontFamily","MuiMenuItem","MuiTooltip","tooltip","App","_isMounted","classes","StyledApp","withStyles","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c5824059.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nlet firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyAhKNoLSbI082LfD08uTtt67fzuc3fDgzo\",\r\n  \r\n    authDomain: \"ruffmix-app.firebaseapp.com\",\r\n  \r\n    databaseURL: \"https://ruffmix-app-default-rtdb.firebaseio.com\",\r\n  \r\n    projectId: \"ruffmix-app\",\r\n  \r\n    storageBucket: \"ruffmix-app.appspot.com\",\r\n  \r\n    messagingSenderId: \"721486047256\",\r\n  \r\n    appId: \"1:721486047256:web:1487b9fc61c34d0a7efb6d\"\r\n  \r\n};\r\n\r\n//      DO NOT CHANGE UNTIL DEPLOY - set host to 192.168.1.246 port 9000 in firebase.json and here using useEMulator()\r\n\r\nvar fire = firebase.initializeApp(firebaseConfig);\r\n\r\nfire.database().useEmulator(\"192.168.1.246\", 9000);\r\nfire.auth().useEmulator(\"http://192.168.1.246:9099\");\r\nfire.storage().useEmulator(\"192.168.1.246\", 9199);\r\n\r\nexport default firebase;","import { Box, Button, CardHeader, Checkbox, Collapse, FormControl, FormControlLabel, Grow, Input, InputAdornment, TextField, Tooltip } from \"@material-ui/core\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport React from \"react\";\r\nimport firebase from '../../firebase';\r\nimport { AccountView } from './AccountView';\r\nimport './UploadTrack.css';\r\nimport WaveForm from \"./WaveForm\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * The UploadTrack window allows a registered user to upload a new track to their profile. \r\n */\r\nexport class UploadTrack extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType,\r\n        /**\r\n         * Omittable ID of a track's folder when uploading a new version of the track\r\n         */\r\n        newVersionFolder: PropTypes.string\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            trackName: '',\r\n            trackDescription: '',\r\n            trackCommentData: [''],\r\n            trackMetaData: ['','','',''],\r\n            userID: this.props.router.getUserID(),\r\n            audioFile: '',\r\n            metaDataOther: '',\r\n            other: false,\r\n            trackPreviewPlayer: '',\r\n            loadingProgress: 0,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTrackSubmit = this.handleTrackSubmit.bind(this);\r\n        this.handleFileSelect = this.handleFileSelect.bind(this);\r\n        this.showLoadingProgress = this.showLoadingProgress.bind(this);\r\n\r\n        this.fileInput = React.createRef();\r\n        this.previewRef = React.createRef();\r\n    }\r\n\r\n    /**\r\n     * Handles the selection of an audio file to upload and draws a Waveform preview. Supported formats are .mp3, .wav, .aac, .m4a, and .flac\r\n     */\r\n    handleFileSelect = (event) => {\r\n        if (this.fileInput.current.files[0] !== this.state.audioFile) {\r\n            this.setState({\r\n                audioFile: this.fileInput.current.files[0]\r\n            }, () => this.drawPreview(this.fileInput.current.files[0]))\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        if (event.target.name.match('Mixing|Mastering|Arrangement')) {\r\n            var metaDataArr = [...this.state.trackMetaData];\r\n            const index = parseInt(event.target.id);\r\n            if (event.target.checked) metaDataArr[index] = event.target.name;\r\n            else metaDataArr[index] = '';\r\n\r\n            this.setState({\r\n                trackMetaData: metaDataArr,\r\n            })\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name]: event.target.value,\r\n            }, () => {\r\n                if (event.target.name.match('metaDataOther')) {\r\n                    var metaDataArr = [...this.state.trackMetaData]\r\n                    metaDataArr[3] = this.state.metaDataOther;\r\n                    this.setState({ trackMetaData: metaDataArr });\r\n                }\r\n            })\r\n        }\r\n\r\n       //event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Uploads the audio track to Firebase storage\r\n     */\r\n    handleTrackSubmit = (event) => {\r\n        var newFolderID = '';\r\n        if (this.props.newVersionFolder) newFolderID = this.props.newVersionFolder;\r\n        else {\r\n            var fRef = firebase.database().ref().push();\r\n            newFolderID = fRef.key;\r\n        }\r\n\r\n        var tRef = firebase.database().ref().push();\r\n        var newTrackID = tRef.key;\r\n\r\n        var newAudioFile = this.fileInput.current.files[0];\r\n        //var newFileName = this.fileInput.current.files[0].name;\r\n\r\n        const storageRef = firebase.storage().ref().child(this.state.userID + '/audio/' + newFolderID + '/' + newTrackID);\r\n        this.props.router.setLoadingState(true);\r\n\r\n        firebase.database().ref('users/' + this.state.userID + '/audio/' + newFolderID + '/' + newTrackID).set({\r\n            folderID: newFolderID,\r\n            trackID: newTrackID,\r\n            userID: this.state.userID,\r\n            trackname: this.state.trackName,\r\n            description: this.state.trackDescription,\r\n            metadata: this.state.trackMetaData,\r\n            commentdata: this.state.trackCommentData,\r\n        }).catch((error) => {\r\n            alert('Track Data Set fail' + error);\r\n        });\r\n\r\n        storageRef.put(newAudioFile).then((snapshot) => {\r\n            console.log('File upload success');\r\n            this.props.router.updateContent(<AccountView router={this.props.router} user={this.props.router.getUserID()} />);\r\n        }).then(() => this.props.router.setLoadingState(false)).catch((error) => {\r\n            alert('Track Upload fail' + error);\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Draws a preview of the track to be uploaded using the Waveform component\r\n     * @param {File} args The audio file to be used in the Waveform component\r\n     */\r\n    drawPreview = (args) => {\r\n        const waveObj = <WaveForm\r\n                        isChild={false}\r\n                        preview={true}\r\n                        controller={this}\r\n                        router={this.props.router}\r\n                        audiofile={args}\r\n                        trackname={this.state.trackName}\r\n                        metadata={[]}\r\n                        description=''\r\n                        />;\r\n\r\n        this.setState({\r\n            trackPreviewPlayer: ''\r\n        }, ()=> this.setState({trackPreviewPlayer: waveObj}))\r\n    }\r\n\r\n    showLoadingProgress(props) {\r\n        this.setState({ \r\n            loadingProgress: props,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grow in={true}>\r\n                <Box display='flex' flexDirection='column' justifyContent='space-between' height='100%' textAlign='center'>\r\n                    <CardHeader title={this.props.newVersionFolder ? 'Upload New Track Version' : 'Upload New Track'} />\r\n                    <Box display='flex' flexDirection='column'>\r\n                        <Collapse in={this.state.trackPreviewPlayer} display='flex' flexDirection='column' justifyContent='flex-start'>\r\n                            <Box height='64px' pb={7}>{this.state.trackPreviewPlayer}</Box>\r\n                        </Collapse>\r\n                        <form onSubmit={this.handleTrackSubmit}>\r\n                            <Box display='flex' flexDirection='column' alignItems='center' className={this.props.router.getStyles('formContent')}>\r\n                                <FormControl>\r\n                                    <Tooltip title='Upload your music file - Supported formats: .mp3, .wav, .aac, .m4a, .flac' arrow={true} placement='right'>\r\n                                        <Input\r\n                                            type=\"file\"\r\n                                            inputProps={{ ref: this.fileInput, accept: 'audio/flac, audio/m4a, audio/wav, audio/mp3, audio/aac'}}\r\n                                            required={true}\r\n                                            onChange={this.handleFileSelect}\r\n                                            startAdornment={\r\n                                                <InputAdornment>\r\n                                                    <PublishIcon />\r\n                                                </InputAdornment>\r\n                                            }\r\n\r\n                                        />\r\n                                    </Tooltip>\r\n                                    <Tooltip title='The title of your track' arrow={true} placement='right'>\r\n                                        <TextField\r\n                                            label=\"Track Name\"\r\n                                            name='trackName'\r\n                                            placeholder='. . .'\r\n                                            size='medium'\r\n                                            required={true}\r\n                                            value={this.state.trackName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Tooltip>\r\n                                    <Tooltip title='A description of your track' arrow={true} placement='right'>\r\n                                        <TextField\r\n                                            label=\"Description\"\r\n                                            name='trackDescription'\r\n                                            placeholder='. . .'\r\n                                            size='medium'\r\n                                            value={this.state.trackDescription}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Tooltip>\r\n                                    <Tooltip title='What problem areas do you want feedback on, or what have you been working on?' arrow={true} placement='right'>\r\n                                        <div>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='0' name=\"Mixing\" onChange={this.handleChange}/>}\r\n                                                label=\"Mixing\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='1' name=\"Mastering\" onChange={this.handleChange} />}\r\n                                                label=\"Mastering\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='2' name=\"Arrangement\" onChange={this.handleChange} />}\r\n                                                label=\"Arrangement\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox name=\"other\" onClick={() => {this.setState({other: !this.state.other})}}/>}\r\n                                                label=\"Other\"\r\n                                            />\r\n                                            <Collapse in={this.state.other ? true : false} display='flex' flexDirection='column'>\r\n                                                    <div>Please specify \"Other\" tag (Limit 12 characters):</div>\r\n                                                    <TextField\r\n                                                        name='metaDataOther'\r\n                                                        placeholder='. . .'\r\n                                                        size='medium'\r\n                                                        inputProps={{ maxLength : 12 }}\r\n                                                        value={this.state.metaDataOther}\r\n                                                        onChange={this.handleChange}\r\n                                                    />\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    </Tooltip>\r\n                                </FormControl>\r\n                                <Button type='submit' variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Upload Track</Button>\r\n                            </Box>\r\n                        </form>\r\n                    </Box>\r\n                    <Box></Box>\r\n                </Box>\r\n            </Grow>\r\n        );\r\n    }\r\n}","import { Box, Button, Chip, CircularProgress, Collapse, IconButton, Paper, TextField, Tooltip } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PauseCircleOutlineRoundedIcon from '@material-ui/icons/PauseCircleOutlineRounded';\r\nimport PlayCircleOutlineRoundedIcon from '@material-ui/icons/PlayCircleOutlineRounded';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport firebase from 'firebase';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport CursorPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';\r\nimport RegionsPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.regions.min.js';\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js';\r\nimport CommentObject from './CommentObject';\r\nimport { UploadTrack } from './UploadTrack';\r\nimport './WaveForm.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Displays the comment section of a Waveform component\r\n * @param {Array.<Object>} args The array of comments to be displayed\r\n * @returns A representation of the comment section which includes CommentObject components\r\n */\r\nexport function CommentSection(args) {\r\n\r\n    var listComments = '';\r\n\r\n    if (args.commentArray !== '') {\r\n        const comments = args.commentArray;\r\n        listComments = comments.map((newComment) => {\r\n            if (newComment !== '') return (\r\n                <Box display='flex' flexDirection='row' justifyContent={(newComment.author === args.router.getUserID()) ? 'flex-end' : 'flex-start'}>\r\n                    <CommentObject router={args.router} userID={newComment.author} comment={newComment.body} player={args.player} />\r\n                </Box>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (<div>{listComments}</div>);\r\n}\r\n\r\n/**\r\n * Creates a new Wavesurfer instance  \r\n * @param {*} args Defines various parameters for how the instance is created\r\n * @param {boolean} args.isChild Determines if this instance is a child within a list of tracks and sizes it accordingly\r\n * @param {boolean} args.playState Toggles pause/play \r\n * @param {Function} args.handleReady Callback function to be used when the Wavesurfer instance is ready\r\n * @param {Function} args.setTime Callback function to be used when the user seeks on the Wavesurfer instance\r\n * @param {File} args.audiofile The audio file to be loaded into the Wavesurfer instance\r\n * @param {Function} args.setLoadingProgress Callback function to be used while the Wavesurfer instance is loading, receives integer loading progress (0..100)\r\n * @param {boolean} args.asPreview Omittable boolean to determine if this instance is to be used as a preview. Disables drag selection when set to true.\r\n * @param {Function} args.identifier Omittable callback function used to show the display name of a user when hovering the mouse over a commented region\r\n * @returns A new Wavesurfer instance\r\n */\r\nexport function MakeWave(args) {\r\n    const waveformRef = useRef();\r\n    const timelineRef = useRef();\r\n\r\n    const playerHeight = args.isChild ? 64 : 96;\r\n\r\n    useEffect(() => {\r\n        if (waveformRef.current) {\r\n            const wavesurfer = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                height: playerHeight,\r\n                progressColor: 'lightgrey',\r\n                waveColor: 'lightgreen',\r\n                responsive: 'true',\r\n                plugins: [\r\n                    TimelinePlugin.create({\r\n                        container: timelineRef.current,\r\n                        height: playerHeight,\r\n                        timeInterval: 7.5,\r\n                    }),\r\n                    CursorPlugin.create({\r\n                        showTime: 'true',\r\n                        opacity: '1',\r\n\r\n                    }),\r\n                    RegionsPlugin.create({\r\n                        regionsMinLength: 2,\r\n                    })\r\n                ]\r\n            });\r\n\r\n            if (args.asPreview === false) wavesurfer.enableDragSelection({ color: 'hsla(400, 100%, 30%, 0.1)', id: 'dragSelection' });\r\n\r\n            wavesurfer.on('ready', () => args.handleReady(wavesurfer));\r\n            wavesurfer.on('seek', () => args.setTime());\r\n            wavesurfer.on('loading', (progress) => args.setLoadingProgress(progress));\r\n            //Draw user info over region\r\n            wavesurfer.on('region-mouseenter', (region) => {\r\n\r\n                const commentIndex = (region.id.substring(region.id.indexOf('[') + 1, region.id.indexOf(']')));\r\n                const parsed = region.id.substring(region.id.indexOf('_') + 1, region.id.length)\r\n                const ref = firebase.database().ref('users/' + parsed + '/displayname');\r\n\r\n                var regionUser = '';\r\n                ref.on('value', (snapshot) => {\r\n                    regionUser = snapshot.val();\r\n                });\r\n\r\n                var identifierObj = {\r\n                    xPos: 0,\r\n                    user: regionUser\r\n                }\r\n\r\n                region.on('mouseenter', (mouseEvent) => {\r\n                    identifierObj.xPos = mouseEvent.pageX;\r\n                    args.identifier(identifierObj);\r\n                })\r\n\r\n            });\r\n\r\n\r\n            var storage = firebase.storage().ref();\r\n\r\n                                                                                                //Might not have use case for loading preview in non-local file\r\n            if (args.audiofile) {\r\n                if (args.audiofile instanceof File) wavesurfer.loadBlob(args.audiofile);\r\n                else {\r\n                    storage.child(args.audiofile).getDownloadURL().then((url) => {\r\n                        var xhr = new XMLHttpRequest();\r\n                        xhr.responseType = 'blob';\r\n                        xhr.onload = (event) => {\r\n                            var blob = xhr.response;\r\n                        };\r\n                        xhr.open('GET', url);\r\n                        xhr.send();\r\n    \r\n                        wavesurfer.load(url);\r\n                    }).catch((error) => {\r\n                        alert('Waveform download error: ' + error);\r\n                    });\r\n                }  \r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Box position='relative' zIndex='5' ref={waveformRef} />\r\n            <div style={{ opacity: '20%', marginTop: -playerHeight, pointerEvents: 'none', }} ref={timelineRef} />\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n * @param {Array.<string>} props.array The metadata array associated with this Waveform component\r\n * @returns A representation of the metadata\r\n */\r\nexport function MetaDataSection(props) {\r\n    if (props.array) {\r\n        const dataArray = props.array;\r\n    \r\n        const colors = ['#FFAB91', '#CE93D8', '#80CBC4', '#FFE082'];\r\n    \r\n        const chips = dataArray.map((data, index) => {\r\n            if (data !== '') return <Box mx={0.5}><Chip style={{ backgroundColor: colors[index] }} size=\"small\" label={data} /></Box>\r\n        }\r\n        );\r\n    \r\n        return chips;\r\n    }\r\n}\r\n\r\n/**\r\n * The WaveForm class organizes the various parts of a WaveForm component which is the main way audio is played on Ruffmix. \r\n * The component includes areas for audio playback, comments, metadata tags, title and description, and can be deleted or updated with a new version\r\n * of the track, which is shown in a track 'timeline'.\r\n * @returns The representation of the Waveform component, either as a preview (which only allows for basic playback and seeking) or with the full\r\n * content as described above.\r\n */\r\nclass WaveForm extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The audio file to be loaded and played. Supported formats are .mp3, .wav, .aac, .m4a, .flac \r\n         */\r\n        audiofile: PropTypes.instanceOf(File),\r\n        /**\r\n         * The component which is intended to handle the playback of more than one WaveForm component. If the WaveForm component is not a preview, this \r\n         * property should be the AccountView window component\r\n         */\r\n        controller: PropTypes.elementType,\r\n        /**\r\n         * A brief description of the track\r\n         */\r\n        description: PropTypes.string,\r\n        /**\r\n         * The folder ID for a track on Firebase storage \r\n         */\r\n        folderID: PropTypes.string,\r\n        /**\r\n         * Determines if this WaveForm component is a child in a list of tracks, and passes this value to the MakeWave function\r\n         */\r\n        isChild: PropTypes.bool,\r\n        /**\r\n         * The array of metadata associated with the track\r\n         */\r\n        metadata: PropTypes.array,\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType,\r\n        /**\r\n         * The ID of a track on Firebase storage\r\n         */\r\n        trackID: PropTypes.string,\r\n        /**\r\n         * The displayed name of the track\r\n         */\r\n        trackname: PropTypes.string,\r\n        /**\r\n         * The ID of a user on Firebase\r\n         */\r\n        userID: PropTypes.string,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            playState: false,\r\n            expand: false,\r\n            isChild: this.props.isChild,\r\n            trackIsPreview: (this.props.preview ? this.props.preview : false),\r\n            commentArr: [],\r\n            commentContent: '',\r\n            playerObject: '',\r\n            playerDuration: '',\r\n            currentTime: '',\r\n            controller: this.props.controller,\r\n            containsPreviews: false,\r\n            audioFile: this.props.audiofile,\r\n            trackName: this.props.trackname,\r\n            metaData: this.props.metadata,\r\n            description: this.props.description,\r\n            folderID: this.props.folderID,\r\n            trackID: this.props.trackID,\r\n            userID: this.props.userID,\r\n            loadingProgress: 0,\r\n            regionIdentifier: '',\r\n            authorControls: ((this.props.userID === this.props.router.getUserID()) ? true : false),\r\n        };\r\n        this.handleReady = this.handleReady.bind(this);\r\n        this.setTime = this.setTime.bind(this);\r\n        this.setLoadingProgress = this.setLoadingProgress.bind(this);\r\n        this.setRegionIdentifier = this.setRegionIdentifier.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loads the comments associated with this track\r\n     */\r\n    componentDidMount() {\r\n        const trackRef = firebase.database().ref('users/' + this.state.userID + '/audio/' + this.state.folderID + '/' + this.state.trackID);\r\n        var trackParse = '';\r\n\r\n        trackRef.on('value', (snapshot) => {\r\n            trackParse = snapshot.val();\r\n            if (trackParse) {\r\n                this.setState({\r\n                    commentArr: trackParse.commentdata,\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopPlay();\r\n    }\r\n\r\n    /**\r\n     * Allows the user to add an updated version of a track into its 'timeline'\r\n     */\r\n    newTrackVersion() {\r\n        if (this.props.router.getUserID() && this.state.authorControls) this.props.router.updateContent(<UploadTrack router={this.props.router} newVersionFolder={this.state.folderID} />);\r\n        else this.login();\r\n    }\r\n\r\n    /**\r\n     * Deletes the track\r\n     */\r\n    deleteTrack() {\r\n        if (this.state.authorControls) {\r\n            this.props.router.setLoadingState(true);\r\n\r\n            firebase.database().ref('users/' + this.state.userID + '/audio/' + this.state.folderID + '/' + this.state.trackID).remove().then(() => {\r\n                console.log('Deleted track from realtime DB');\r\n            }).catch((error) => {\r\n                alert('Realtime DB track delete error: ' + error)\r\n            });\r\n\r\n            firebase.storage().ref().child('audio/' + this.state.folderID + '/' + this.state.trackID).delete().then(() => {\r\n                console.log('Deleted track from storage');\r\n                this.state.controller.getTracks();\r\n            }).then(() => this.props.router.setLoadingState(false)).catch((error) => {\r\n                alert('Storage track delete error: ' + error)\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes any regions selected on a track while writing a comment before the comment is submitted\r\n     */\r\n    clearPreviewRegions() {\r\n        if (this.state.playerObject) {\r\n            var currentRegions = this.state.playerObject.regions.list;\r\n            Object.keys(currentRegions).forEach(function (key) {\r\n                if (currentRegions[key].id.includes('preview')) currentRegions[key].remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses the comments and draws all referenced regions onto the track's Wavesurfer instance\r\n     */\r\n    drawExistingRegions() {\r\n        if (this.state.playerObject) {\r\n            this.state.playerObject.clearRegions();\r\n\r\n            var parseCommentObjects = this.state.commentArr;\r\n\r\n            var index = 0;\r\n\r\n            parseCommentObjects.forEach(comment => {\r\n                //Parse each comment for region display\r\n                if (comment) {\r\n                    const timeRegex = new RegExp('^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d\\\\s|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d\\\\s'\r\n                        + '| \\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d '\r\n                        + '|\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$'\r\n                        + '|^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$', 'g');\r\n                    var found = JSON.stringify(comment.body).match(timeRegex);\r\n\r\n                    if (found) {\r\n                        found.forEach(\r\n                            timeString => {\r\n                                const duration = timeString.split('-', 2);\r\n                                const from = duration[0];\r\n                                const to = duration[1];\r\n\r\n                                const fromSplit = from.split(\":\");\r\n                                const startTime = fromSplit[0] * 60 + fromSplit[1] * 1;\r\n\r\n                                const toSplit = to.split(\":\");\r\n                                const endTime = toSplit[0] * 60 + toSplit[1] * 1;\r\n\r\n                                const trackDuration = this.state.playerObject.getDuration();\r\n                                if (startTime >= 0 && endTime >= 0 && startTime <= trackDuration && endTime <= trackDuration) {\r\n                                    this.state.playerObject.addRegion({\r\n                                        id: '[' + index + ']' + (Math.random().toString()).substring(2, 8) + '_' + comment.author,\r\n                                        start: startTime,\r\n                                        end: endTime,\r\n                                        resize: false,\r\n                                        drag: false,\r\n                                        color: 'hsla(200, 50%, 70%, 0.4)',\r\n                                    });\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    index++;\r\n                }\r\n            });\r\n        }\r\n        this.checkRegions();\r\n    }\r\n\r\n    /**\r\n     * Draws a preview of the regions to be added onto the Wavesurfer instance when a new comment is being written\r\n     */\r\n    previewRegion() {\r\n        this.clearPreviewRegions();\r\n\r\n        const timeRegex = new RegExp('^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d\\\\s|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d\\\\s'\r\n            + '| \\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d '\r\n            + '|\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$'\r\n            + '|^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$', 'g');\r\n        var found = this.state.commentContent.match(timeRegex);\r\n\r\n        if (found) {\r\n            found.forEach(\r\n                timeString => {\r\n                    const duration = timeString.split('-', 2);\r\n                    const from = duration[0];\r\n                    const to = duration[1];\r\n\r\n                    const fromSplit = from.split(\":\");\r\n                    const startTime = fromSplit[0] * 60 + fromSplit[1] * 1;\r\n\r\n                    const toSplit = to.split(\":\");\r\n                    const endTime = toSplit[0] * 60 + toSplit[1] * 1;\r\n\r\n                    const trackDuration = this.state.playerObject.getDuration();\r\n                    if (startTime >= 0 && endTime >= 0 && startTime <= trackDuration && endTime <= trackDuration) {\r\n                        var currentRegions = this.state.playerObject.regions.list;\r\n\r\n                        //Adds new preview regions\r\n                        if (currentRegions) {\r\n                            let count = 0;\r\n                            var wasFound = false;\r\n                            Object.keys(currentRegions).forEach(function (key) {\r\n                                count++;\r\n                                if (currentRegions[key].start === startTime && currentRegions[key].end === endTime && currentRegions[key].id.includes('preview')) {\r\n                                    wasFound = true;\r\n                                }\r\n                            });\r\n\r\n                            if (!wasFound) {\r\n                                this.state.playerObject.addRegion({\r\n                                    id: 'preview ' + count,\r\n                                    start: startTime,\r\n                                    end: endTime,\r\n                                    resize: false,\r\n                                    color: 'hsla(400, 100%, 30%, 0.1)'\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Ensures a comment correctly specifies a full range for a region preview \r\n     * @example 0:30-1:00 //The correct format for a region to be commented on\r\n     */\r\n    checkRegions() {\r\n\r\n        const currentRegions = this.state.playerObject.regions.list;\r\n        const comment = this.state.commentContent;\r\n\r\n        var previewCheck = false;\r\n\r\n        Object.keys(currentRegions).forEach(function (key) {\r\n            const start = currentRegions[key].start;\r\n            const end = currentRegions[key].end;\r\n            const startCheck = new Date(start * 1000).toISOString().substr(15, 4);\r\n            const endCheck = new Date(end * 1000).toISOString().substr(15, 4);\r\n\r\n            if (currentRegions[key].id.includes('preview')) {\r\n                previewCheck = true;\r\n            }\r\n\r\n            if (currentRegions[key].id.includes('preview') && !comment.includes(startCheck + '-' + endCheck)) {\r\n                currentRegions[key].remove();\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            containsPreviews: previewCheck\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Gets the playback time of a track in seconds, as required by Wavesurfer in order to create/modify regions\r\n     * @param {string} time The string representation of a playback time in mm:ss\r\n     * @returns The total seconds of the time in integer form\r\n     */\r\n    getSeconds(time) {\r\n        const str = time.split(':');\r\n        const minutes = str[0], seconds = str[1];\r\n        const total = parseInt(minutes * 60) + parseInt(seconds);\r\n        return total;\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        this.setState({\r\n            commentContent: event.target.value,\r\n        })\r\n\r\n        this.previewRegion();\r\n        this.checkRegions();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleCommentSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.commentContent) {\r\n            if (!this.state.expand) this.toggleExpand();\r\n\r\n            var newCommentData = {\r\n                author: this.props.router.getUserID(),\r\n                body: this.state.commentContent\r\n            };\r\n\r\n            var newArr = [];\r\n\r\n            if (this.state.commentArr.length === 0) newArr[0] = newCommentData;\r\n            else newArr = this.state.commentArr.concat(newCommentData);\r\n\r\n            firebase.database()\r\n                .ref('users/' + this.state.userID + '/audio/' + this.state.folderID + '/' + this.state.trackID)\r\n                .update({ commentdata: newArr });\r\n\r\n            this.setState({\r\n                commentContent: '',\r\n                inputTime: '',\r\n            }, () => this.drawExistingRegions());\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback function used with MakeWave to set a track's loading progress \r\n     * @param {int} props The integer progress returned from the Wavesurfer instance\r\n     */\r\n    setLoadingProgress(props) {\r\n        this.setState({\r\n            loadingProgress: props,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Callback function used with MakeWave to set the current time when a user seeks on the Wavesurfer instance\r\n     */\r\n    setTime() {\r\n        this.setState({\r\n            currentTime: new Date(this.state.playerObject.getCurrentTime() * 1000).toISOString().substr(11, 8),\r\n            playState: true\r\n        }, () => this.togglePlay(this.state.playerObject.getCurrentTime()))\r\n    }\r\n\r\n    /**\r\n     * Callback function that allows the WaveForm component to show the display name of the author of a comment's region \r\n     * @param {Object} props An object that contains information about a region\r\n     * @param {float} props.xPos The x position of the region in the window\r\n     * @param {string} props.user The user's display name\r\n     */\r\n    setRegionIdentifier(props) {\r\n        this.setState({\r\n            regionIdentifier: props\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the Wavesurfer instance's ready event is fired, which sets up the WaveForm component's playback functionality and display\r\n     * @param {Object} args The Wavesurfer object to be used with this WaveForm component\r\n     */\r\n    handleReady(args) {\r\n        const duration = new Date(args.getDuration() * 1000).toISOString().substr(11, 8);\r\n\r\n        this.setState({\r\n            playerObject: args,\r\n            playerDuration: duration,\r\n            currentTime: new Date(args.getCurrentTime() * 1000).toISOString().substr(11, 8)\r\n        })\r\n\r\n        if (!this.state.trackIsPreview) {\r\n            this.state.playerObject.on('region-update-end', (region) => {\r\n                if (region.id === 'dragSelection') {\r\n                    const start = region.start;\r\n                    const end = region.end;\r\n\r\n                    const startConvert = new Date(start * 1000).toISOString().substr(15, 4);\r\n                    const endConvert = new Date(end * 1000).toISOString().substr(15, 4);\r\n\r\n                    const newTimeStr = this.state.commentContent.concat(startConvert + '-' + endConvert + ' ');\r\n                    this.setState({ commentContent: newTimeStr });\r\n                    region.remove();\r\n                    this.previewRegion();\r\n                    this.checkRegions();\r\n                }\r\n            });\r\n\r\n            this.checkRegions();\r\n            this.drawExistingRegions();\r\n        }\r\n\r\n        this.state.playerObject.on('pause', () => { if (this.state.playState !== false) this.setState({ playState: !this.state.playState }) });\r\n    }\r\n\r\n    stopPlay() {\r\n        if (this.state.playerObject) {\r\n            this.setState({\r\n                playState: false,\r\n            })\r\n            this.state.playerObject.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Begins playback at a certain point of a track\r\n     * @param {string} time The playback time of a track in mm:ss format\r\n     */\r\n    playFrom(time) {\r\n        const playFromTime = time.split('-');\r\n        const from = this.getSeconds(playFromTime[0]);\r\n        const to = this.getSeconds(playFromTime[1]);\r\n        this.togglePlay(from, to);\r\n    }\r\n\r\n    /**\r\n     * Handles the pause/play functionality of a track. Can be overloaded with a start and end range to only play a certain section of the track.\r\n     * @param {int} start \r\n     * @param {int} end \r\n     */\r\n    togglePlay(start, end) {\r\n        if (this.state.playerObject) {\r\n\r\n            if (start) this.state.playerObject.play(start);\r\n            else if (start && end) this.state.playerObject.play(start, end);\r\n            else this.state.playerObject.playPause();\r\n\r\n            if (!start && !end) {\r\n                this.setState({playState: !this.state.playState})\r\n            }\r\n            else this.setState({playState: true})\r\n\r\n            if (!this.state.trackIsPreview && this.state.controller) {\r\n                if (this.state.controller.getPrevPlayer() === \"\") {\r\n                    this.state.controller.setPrevPlayer(this);\r\n                }\r\n                else if (this !== this.state.controller.getPrevPlayer()) {\r\n                    this.state.controller.getPrevPlayer().stopPlay();\r\n                    this.state.controller.setPrevPlayer(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens or closes the comment section of the WaveForm component\r\n     */\r\n    toggleExpand() {\r\n        this.setState({\r\n            expand: !this.state.expand,\r\n        })\r\n    }\r\n\r\n    //Displays the WaveForm either as a preview or with full content\r\n    render() {\r\n        if (this.state.trackIsPreview) {\r\n            return (\r\n                <Box>\r\n                    <Box display='flex' flexDirection='row' alignItems='center'>\r\n                        <IconButton\r\n                            onClick={() => { this.togglePlay() }}\r\n                            size='small'\r\n                            edge='start'\r\n                            style={{ marginRight: '5px'}}\r\n                            children={this.state.playState ?\r\n                                <PauseCircleOutlineRoundedIcon style={{ width: '64px', height: '64px' }} />\r\n                                : <PlayCircleOutlineRoundedIcon style={{ width: '64px', height: '64px' }} />\r\n                            }\r\n                        >\r\n                        </IconButton>\r\n                        <Box width='400px'>\r\n                            <MakeWave\r\n                                isChild={false}\r\n                                playState={this.state.playState}\r\n                                handleReady={this.handleReady}\r\n                                setTime={this.setTime}\r\n                                audiofile={this.state.audioFile}\r\n                                setLoadingProgress={this.setLoadingProgress}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                    <Box display='flex' flexDirection='row' justifyContent='center'>\r\n                        <MetaDataSection array={this.state.metaData}/>\r\n                    </Box>\r\n                </Box>\r\n            )\r\n        }\r\n        else return (\r\n            <Box display='flex' flexDirection='column' padding='10px'>\r\n                <Box\r\n                    style={{ display: this.state.isChild ? 'flex' : 'none' }}\r\n                    paddingLeft='70%'\r\n                    margin='10px'\r\n                >\r\n                    <MoreVertIcon style={{ color: 'lightgrey' }} fontSize='small' />\r\n                </Box>\r\n                <Box\r\n                    display='flex'\r\n                    flexDirection='row'\r\n                    justifyContent='flex-start'\r\n                    paddingLeft='20%'\r\n                    style={{ display: this.state.isChild ? \"none\" : \"true\", }}\r\n                >\r\n                    {this.state.trackName + ' - ' + this.state.description}\r\n                    <Paper style={{ position: 'fixed', left: this.state.regionIdentifier.xPos }}>\r\n                        {this.state.regionIdentifier.user}\r\n                    </Paper>\r\n                </Box>\r\n                <Box display='flex' flexDirection='row' alignItems='center' justifyContent='flex-end'>\r\n                    <Box\r\n                        display='flex'\r\n                        flexDirection='column'\r\n                        alignItems='center'\r\n                        justifyContent='space-between'\r\n                        style={{ visibility: this.state.authorControls ? \"visible\" : \"hidden\", zIndex: '2' }}\r\n                    >\r\n                        <Tooltip title='Upload a new version of this track' placement='left' arrow={true}>\r\n                            <IconButton onClick={() => this.newTrackVersion()} style={{ display: this.state.isChild ? \"none\" : \"true\", }}>\r\n                                <SubdirectoryArrowRightIcon style={{ transform: 'scaleY(-1)' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Delete this track' placement='left' arrow={true}>\r\n                            <IconButton onClick={() => this.deleteTrack()}>\r\n                                <DeleteOutlineIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Box>\r\n                    <IconButton\r\n                        onClick={() => { this.togglePlay() }}\r\n                        size='small'\r\n                        edge='start'\r\n                        style={{ marginRight: '5px' }}\r\n                        children={this.state.playState ?\r\n                            <PauseCircleOutlineRoundedIcon style={{ width: this.state.isChild ? '48px' : '64px', height: this.state.isChild ? '48px' : '64px' }} />\r\n                            : <PlayCircleOutlineRoundedIcon style={{ width: this.state.isChild ? '48px' : '64px', height: this.state.isChild ? '48px' : '64px' }} />\r\n                        }\r\n                    >\r\n                    </IconButton>\r\n                    <Box width={this.state.isChild ? '60%' : '80%'}>\r\n                        <div>\r\n                            <Box style={{ display: (this.state.loadingProgress === 100) ? \"none\" : \"true\", }} display='flex' justifyContent='center'>\r\n                                <CircularProgress />\r\n                            </Box>\r\n                            <div style={{ visibility: (this.state.loadingProgress === 100) ? \"visible\" : \"hidden\", }}>\r\n                                <MakeWave\r\n                                    isChild={this.state.isChild}\r\n                                    playState={this.state.playState}\r\n                                    handleReady={this.handleReady}\r\n                                    setTime={this.setTime}\r\n                                    audiofile={this.props.audiofile}\r\n                                    setLoadingProgress={this.setLoadingProgress}\r\n                                    asPreview={this.state.trackIsPreview}\r\n                                    identifier={this.setRegionIdentifier}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n                <Box marginTop='-3%' display='flex' flexDirection='row-reverse' style={{ zIndex: '1' }}>{this.state.currentTime}/{this.state.playerDuration}</Box>\r\n                <Box onClick={() => { this.toggleExpand() }} display='flex' flexDirection='row' justifyContent='flex-end' alignItems='center'>\r\n                    <MetaDataSection array={this.state.metaData} />\r\n                    <IconButton\r\n                        onClick={() => { this.toggleExpand() }}\r\n                        size='small'\r\n                    >\r\n                        <ExpandMoreIcon style={{ width: '24px', height: '24px' }} />\r\n                    </IconButton>\r\n                </Box>\r\n                <Collapse onClick={() => { if (!this.state.expand) this.toggleExpand() }} in={this.state.expand ? true : false} collapsedHeight={15}>\r\n                    <Box\r\n                        display='flex'\r\n                        marginLeft={this.state.isChild ? '40%' : '20%'}\r\n                        flexDirection='column'\r\n                        flexWrap='wrap'\r\n                    >\r\n                        <CommentSection commentArray={this.state.commentArr} player={this} router={this.props.router} />\r\n                    </Box>\r\n                </Collapse>\r\n                <Box display='flex' flexDirection='row' justifyContent='flex-end' marginTop='4px'>\r\n                    <form onSubmit={this.handleCommentSubmit}>\r\n                        <Box display='flex' flexDirection='row' alignItems='flex-end' >\r\n                            <TextField\r\n                                label=\"New Comment\"\r\n                                placeholder='. . .'\r\n                                require={true}\r\n                                value={this.state.commentContent}\r\n                                onChange={this.handleTextChange}\r\n                                size='small'\r\n                            />\r\n                            <Box mx={2}><Button size='small' type='submit' variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Submit</Button></Box>\r\n                            <Box>\r\n                                <Button\r\n                                    size='small'\r\n                                    onClick={() => this.clearPreviewRegions()}\r\n                                    style={{ display: this.state.containsPreviews ? 'flex' : 'none' }}\r\n                                    className={this.props.router.getStyles('b_MainWindow')}\r\n                                >\r\n                                    Clear Regions\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Box>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default WaveForm;","import { Avatar, Box, Button, Fade, Slide, Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport './AccountView.css';\r\nimport { Conversations } from './Conversations';\r\nimport WaveForm from \"./WaveForm\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n/**\r\n * The AccountView window displays a user's public information and track list. From here other users can listen to and\r\n * comment on their public tracks and initiate conversations.\r\n */\r\nexport class AccountView extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType,\r\n        /**\r\n         * The user ID to be used for generating the AccountView\r\n         */\r\n        user: PropTypes.string\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            prevPlayer: \"\",\r\n            userDisplayName: \"\",\r\n            userDescription: \"\",\r\n            userGenres: \"\",\r\n            userRole: \"\",\r\n            userLocation: \"\",\r\n            userAudio: \"\",\r\n            userTracks: [],\r\n            avatarURL: '',\r\n            userPrivacySettings: false,\r\n        };\r\n\r\n        this.setPrevPlayer = this.setPrevPlayer.bind(this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns The player last toggled to play. This is used with the WaveForm component to stop current playback when a new player is toggled to play. \r\n     */\r\n    getPrevPlayer() {\r\n        return this.state.prevPlayer;\r\n    }\r\n\r\n    /**\r\n     * Sets prevPlayer to be a new WaveForm component.\r\n     * @param {Object} props The new WaveForm component containing a player to be paused when needed.  \r\n     */\r\n    setPrevPlayer = (props) => {\r\n        this.setState({\r\n            prevPlayer: props,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Populates the user's track list using WaveForm components.\r\n     */\r\n    getTracks() {\r\n        this.setState({ \r\n            userTracks: []\r\n        })\r\n\r\n        var newTracksArr = [];\r\n\r\n        const folders = (this.state.userAudio);\r\n            \r\n        for (var folder in folders) {\r\n            var currentFolder = folders[folder];\r\n            var index = 0;\r\n            var total = Object.values(folders[folder]).length;\r\n\r\n            for (var track in currentFolder) {\r\n                \r\n                const newTrackFile = currentFolder[track].userID + '/audio/' + currentFolder[track].folderID + '/' + currentFolder[track].trackID;\r\n\r\n                newTracksArr = newTracksArr.concat(\r\n                    <WaveForm \r\n                    isChild={index === total-1 ? false : true} \r\n                    controller={this}\r\n                    router={this.props.router} \r\n                    audiofile={newTrackFile}\r\n                    trackname={currentFolder[track].trackname}\r\n                    metadata={currentFolder[track].metadata}\r\n                    description={currentFolder[track].description}\r\n                    folderID={currentFolder[track].folderID}\r\n                    trackID={currentFolder[track].trackID}\r\n                    userID={currentFolder[track].userID}\r\n                    />\r\n                );\r\n\r\n                index++;\r\n            }\r\n        }\r\n\r\n        this.setState({ \r\n            userTracks: newTracksArr.reverse(),                                                     //probably not efficient operation\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * Will load all public info and tracks for this user.\r\n     */\r\n    componentDidMount() {\r\n        const userRef = firebase.database().ref('users/' + this.props.user);\r\n        var userParse = '';\r\n\r\n        userRef.on('value', (snapshot) => {\r\n            userParse = snapshot.val();\r\n            this.setState({\r\n                userDisplayName: userParse.displayname,\r\n                userDescription: userParse.description,\r\n                userGenres: userParse.genres,\r\n                userRole: JSON.parse(userParse.roles),\r\n                userLocation: userParse.location,\r\n                userAudio: userParse.audio,\r\n                userPrivacySettings: JSON.parse(userParse.privacysettings),\r\n            }, () => this.getTracks());\r\n        });\r\n\r\n        const avatarRef = firebase.storage().ref('images/' + this.props.user);\r\n        if (avatarRef) {\r\n            avatarRef.getDownloadURL()\r\n                .then((url) => {\r\n                    this.setState({avatarURL: url});\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Avatar image fetch failed: ' + error)\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"account-view\">\r\n                <Box className=\"user-info\" style={{ backgroundColor: \"\" }}>\r\n                    <div>\r\n                        <Slide in={true} direction=\"right\">\r\n                            <Box display='flex' flexDirection='row' alignItems='center'>\r\n                                <Avatar\r\n                                    style={{ marginRight: '10px', width: '96px', height: '96px', }}\r\n                                    src={this.state.avatarURL}\r\n                                />\r\n                                <Box\r\n                                    display='flex'\r\n                                    flexDirection='column'\r\n                                    justifyContent='center'\r\n                                    alignItems='flex-start'\r\n                                    style={{ height: '96px', }}>\r\n                                    <Box className='userName' >{this.state.userDisplayName}</Box>\r\n                                    <Box className='userRole'>\r\n                                        {(this.state.userRole) ? \r\n                                            Object.keys(this.state.userRole).filter(role => this.state.userRole[role] === true).join(\"|\") \r\n                                            : ''}\r\n                                    </Box>\r\n                                    <Box className='userRole'>{(this.state.userLocation) ? this.state.userLocation : ''}</Box>\r\n                                </Box>\r\n                            </Box>\r\n                        </Slide>\r\n                        <Slide in={true} direction=\"right\">\r\n                            <Box display='flex'\r\n                                flexDirection='column'\r\n                                alignItems='center'\r\n                                justifyContent='flex-start'\r\n                                height='100%'\r\n                            >\r\n                                <Box \r\n                                display='flex' \r\n                                marginTop='12px' \r\n                                flexDirection='row' \r\n                                style={{ \r\n                                    display: this.props.user === this.props.router.getUserID() ? \"none\" : \"true\",\r\n                                }}\r\n                                >\r\n                                    <Button\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        className={this.props.router.getStyles('b_MainWindow')} \r\n                                        onClick={()=> \r\n                                        this.props.router.updateContent(\r\n                                            <Conversations \r\n                                            router={this.props.router} \r\n                                            user={this.props.user}\r\n                                            />\r\n                                        )}>Send Message\r\n                                    </Button>\r\n                                    <Button\r\n                                    variant='outlined'\r\n                                    size='small'\r\n                                    className={this.props.router.getStyles('b_MainWindow')} \r\n                                    >\r\n                                        Add To Contacts\r\n                                    </Button>\r\n                                </Box>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'><b>Genres</b></TableCell>\r\n                                            <TableCell>{this.state.userGenres}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'><b>Description</b></TableCell>\r\n                                            <TableCell >{this.state.userDescription}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Slide>\r\n                    </div>\r\n                </Box>\r\n                <Fade in={true} timeout={1000}>\r\n                    <Box className=\"user-track\" style={{ backgroundColor: \"\" }}>\r\n                        {( (this.props.user === this.props.router.getUserID()) \r\n                            || ((firebase.auth().currentUser && firebase.auth().currentUser.email) && !this.state.userPrivacySettings['TracksPublic'])\r\n                            || (!(firebase.auth().currentUser && firebase.auth().currentUser.email) && this.state.userPrivacySettings['TracksPublic'])) ? \r\n                            this.state.userTracks : \"Please sign in to view this user's tracks\"}\r\n                    </Box>\r\n                </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Box, Chip, IconButton, Paper } from '@material-ui/core';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport { AccountView } from \"./AccountView\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * The CommentObject component is used to represent either a user's comment on a public track or a message in the Conversations window.\r\n */\r\nclass CommentObject extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType,\r\n        /**\r\n         * The userID which is used to display information about the author\r\n         */\r\n        userID: PropTypes.string,\r\n        /**\r\n         * The comment or message\r\n         */\r\n        comment: PropTypes.string,\r\n        /**\r\n         * The WaveForm component associated with this comment\r\n         */\r\n        player: PropTypes.elementType\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = ({\r\n            comment: this.props.comment,\r\n            userDisplayName: '',\r\n            playerObject: this.props.player,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Will determine the CommentObject's associated user display name\r\n     */\r\n    componentDidMount() {\r\n        const userRef = firebase.database().ref('users/' + this.props.userID);\r\n        var userParse = '';\r\n\r\n        userRef.on('value', (snapshot) => {\r\n            userParse = snapshot.val();\r\n            this.setState({\r\n                userDisplayName: (userParse.displayname) ? userParse.displayname : 'Anonymous',\r\n            });\r\n        });\r\n    }\r\n\r\n    /** \r\n     * @returns The representation of a parsed comment, including text and timestamps\r\n     */\r\n    parsedComment() {\r\n        const commentString = this.state.comment.split(new RegExp('(\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d\\\\s|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d\\\\s)'));\r\n\r\n        const timeRegex = new RegExp('^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d\\\\s|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d\\\\s'\r\n                                        + '| \\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d '\r\n                                        + '|\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$'\r\n                                        + '|^\\\\d\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\d\\\\:\\\\d\\\\d$|^\\\\d\\\\:\\\\d\\\\d\\\\-\\\\d\\\\:\\\\d\\\\d$', 'g');\r\n\r\n        const contents = commentString.map((token) => \r\n            {\r\n                if (token) return (token.match(timeRegex)) \r\n                ?   <div>\r\n                        <Chip \r\n                            size=\"small\" \r\n                            label={token} \r\n                            clickable\r\n                            variant='outlined'\r\n                            onClick={() => { this.state.playerObject.playFrom(token) }}\r\n                            style={{backgroundColor: 'hsla(200, 50%, 70%, 0.4)', borderColor: 'hsla(200, 50%, 70%, 0.4)'}}\r\n                        />\r\n                    </div> \r\n                :   <div>{token}</div>\r\n            });\r\n\r\n        return contents;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Paper \r\n                display='flex' \r\n                flexDirection='column'\r\n                alignItems='flex-start'\r\n                flexWrap='wrap'\r\n                minWidth='96px'\r\n                elevation={0}\r\n                style={{backgroundColor: 'lightgrey', margin:'4px', padding:'6px'}}\r\n                borderRadius={4}\r\n                >\r\n                    <Box className='user' display='flex' flexDirection='row' alignItems='center'>\r\n                        <IconButton size='small' onClick={() => this.props.router.updateContent(<AccountView router={this.props.router} user={this.props.userID}/>)}>\r\n                            <AccountCircleOutlined />{this.state.userDisplayName}\r\n                        </IconButton>\r\n                    </Box>\r\n                    <div className='comment'>{this.parsedComment()}</div>\r\n                </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentObject;","import { Box, Button, Divider, Fade, Slide, TextField } from \"@material-ui/core\";\r\nimport { AccountCircleOutlined } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport CommentObject from \"./CommentObject\";\r\nimport './Conversations.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Returns a representation of selectable conversations between other users.\r\n * @param {Object} router The router component\r\n * @param {Function} setActive - The setConvo function which is used in the Conversations class to set the currently selected and available conversations,\r\n * @param {Object} convos - Contains the list of available conversations set from the setConvo function.\r\n * @returns A representation of current conversations between users.\r\n */\r\nconst ActiveConvoSection = (args) => {\r\n    var listConvos = '';\r\n\r\n    if (args.convos) {\r\n        const convos = args.convos;\r\n        var namesList = '';\r\n\r\n        namesList = convos.map((convo) => {\r\n            var asdf = '';\r\n            const userRef = firebase.database().ref('users/' + convo + '/displayname');\r\n            userRef.on('value', (snapshot) => {\r\n                asdf = snapshot.val();\r\n            })\r\n\r\n            return [convo, asdf];\r\n        });\r\n\r\n    \r\n        listConvos = namesList.map((val) => {\r\n                        \r\n            return (\r\n                <div>\r\n                    <Box display='flex' flexDirection='row' alignItems='center'>\r\n                        <Button onClick={() => args.setActive(val[0])} style={{ justifyContent: 'left', minWidth: '100%' }}>\r\n                            <AccountCircleOutlined/>{val[1]}\r\n                        </Button>\r\n                    </Box>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (<div>{listConvos}</div>);\r\n}\r\n\r\n/**\r\n * Displays the messages between two users.\r\n * @param {Array} messageArray The array of messages between two users \r\n * @param {Object} router The router component\r\n * @param {Object} player The player component to be linked via message using the CommentObject component (not yet implemented, in this case it is null)\r\n * @returns A representation of the messages between two users.\r\n */\r\nexport function MessageSection(args) {\r\n\r\n    var listMessages = '';\r\n\r\n    if (args.messageArray.length > 0) {\r\n        const messages = args.messageArray;\r\n    \r\n        listMessages = messages.map((newMessage) => {\r\n            if (newMessage !== '') return (\r\n                <Fade in={true} timeout={500}>\r\n                    <Box display='flex' flexDirection='row' justifyContent={(newMessage.author === args.router.getUserID()) ? 'flex-end' : 'flex-start'}>\r\n                        <CommentObject userID={newMessage.author} comment={newMessage.body} player={args.player} />\r\n                    </Box>\r\n                </Fade>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (<div>{listMessages}</div>);\r\n}\r\n\r\n/**\r\n * The Conversations window allows for instant messaging between registered users\r\n */\r\nexport class Conversations extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userDisplayName: \"\",\r\n            userConvos: '',\r\n            convoNames: '',\r\n            currentMessages: [],\r\n            currentConvo: \"\",\r\n            messageContent: '',\r\n            activeConvos: '',\r\n        };\r\n\r\n        this.setConvo = this.setConvo.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loads the active conversations and allows the messages of a conversation to be loaded via ActiveConvoSection\r\n     * @param {*} args Should contain a reference to the user whose active conversations will be loaded\r\n     */\r\n    setConvo = (args) => {\r\n\r\n        var setCurrentConvo = '';\r\n\r\n        this.setState({\r\n            currentMessages: [],\r\n        },() => {\r\n            if (args !== this.props.router.getUserID()) {\r\n                if (this.state.userConvos.length !== 0) {\r\n                    var userIndex = 0;\r\n    \r\n                    const convos = Object.keys(this.state.userConvos);\r\n    \r\n                    for (const convo in convos) {\r\n                        \r\n                        if (args === convos[convo]) break;\r\n                        else userIndex++;\r\n                    }\r\n    \r\n                    setCurrentConvo = Object.entries(this.state.userConvos)[userIndex];\r\n    \r\n                    if (setCurrentConvo) {\r\n                        const setCurrentMessages = setCurrentConvo[1];\r\n    \r\n                        this.setState({\r\n                            currentConvo: setCurrentConvo[0],\r\n                            currentMessages: Object.values(setCurrentMessages.messages),\r\n                        });\r\n                    }\r\n                }\r\n                if (this.state.userConvos.length === 0 || !setCurrentConvo) {\r\n\r\n                    this.setState({\r\n                        currentConvo: args,\r\n                        currentMessages: ['']\r\n                    });\r\n    \r\n                    const newConvoLocation =\r\n                        firebase.database().ref('users/' + this.props.router.getUserID() + '/conversations/' + args);\r\n    \r\n                    newConvoLocation.update({ messages: [''] });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a new message, adding the message to both the sending and receiving users' conversations\r\n     */\r\n    handleMessageSend = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.messageContent && this.state.currentConvo && this.state.currentConvo !== this.props.router.getUserID()) {\r\n\r\n            const receiverLocation = \r\n                firebase.database().ref('users/' + this.state.currentConvo + '/conversations/' + this.props.router.getUserID());\r\n\r\n            const senderLocation = \r\n                firebase.database().ref('users/' + this.props.router.getUserID() + '/conversations/' + this.state.currentConvo);\r\n\r\n            var newMessageData = {\r\n                author: this.props.router.getUserID(),\r\n                body: this.state.messageContent \r\n            };\r\n\r\n            var newCurrentMessages = [];\r\n            if (this.state.currentMessages[0] !== '') newCurrentMessages = this.state.currentMessages.concat(newMessageData);\r\n            else newCurrentMessages[0] = newMessageData;\r\n\r\n            this.setState({ \r\n                currentMessages: newCurrentMessages,\r\n                messageContent: '',\r\n            },() => {\r\n                        receiverLocation.update({messages: this.state.currentMessages});\r\n                        senderLocation.update({messages: this.state.currentMessages});\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTextChange = (event) => {        \r\n        this.setState({ \r\n            messageContent: event.target.value,\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userRef = firebase.database().ref('users/' + this.props.router.getUserID());\r\n        var userParse = '';\r\n\r\n        userRef.on('value', (snapshot) => {\r\n            userParse = snapshot.exportVal();\r\n            if (userParse.conversations) {\r\n\r\n                // var startConvo = this.props.user;\r\n                // if (this.state.currentConvo) startConvo = this.state.currentConvo; \r\n                \r\n                this.setState({\r\n                    userConvos: userParse.conversations,\r\n                }, () => {\r\n                    this.setConvo(Object.keys(this.state.userConvos)[0]);\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    userConvos: [],\r\n                }, () => this.setConvo(this.props.user));\r\n            }\r\n        }, ()=>{userRef.off()});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"conversations\">\r\n                <Box className=\"convo-section\">\r\n                    <div>\r\n                        <Slide in={true} direction=\"right\">\r\n                            <Box>\r\n                                Active Conversations\r\n                                <ActiveConvoSection router={this.props.router} setActive={this.setConvo} convos={Object.keys(this.state.userConvos)}/>\r\n                            </Box>\r\n                        </Slide>\r\n                    </div>\r\n                </Box>\r\n                    <div className=\"user-convo\">\r\n                        <Box mr={'4%'}style={{overflowY: 'auto'}}>\r\n                            <MessageSection messageArray={this.state.currentMessages} player={null} router={this.props.router} />\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='row' justifyContent='flex-end' mt={'2%'} mr={'4%'}>\r\n                            <form onSubmit={this.handleMessageSend}>\r\n                                <Box display='flex' flexDirection='row' alignItems='flex-end'>\r\n                                    <TextField\r\n                                        label=\"New Message\"\r\n                                        placeholder='. . .'\r\n                                        require={true}\r\n                                        value={this.state.messageContent}\r\n                                        onChange={this.handleTextChange}\r\n                                        size='small'\r\n                                        fullWidth\r\n                                    />\r\n                                    <Box><Button size='small' type='submit' variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Send</Button></Box>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Divider, IconButton } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React from 'react';\r\nimport { Conversations } from './Window/Conversations';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n/**\r\n * The HeaderMenu returns navigation elements for managing the current user\r\n * @returns User navigation elements\r\n */\r\nexport default function HeaderMenu(props) {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const accountView = (event) => {\r\n        props.header.accountView();\r\n        handleClose(event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const accountSettings = (event) => {\r\n        props.header.accountSettings();\r\n        handleClose(event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const viewMessages = (event) => {\r\n        props.router.updateContent(<Conversations router={props.router} user={props.router.getUserID()}/>);\r\n        handleClose(event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const logOut = (event) => {\r\n\r\n        props.router.signOut();\r\n        setOpen(false);\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <IconButton className={props.router.getStyles('b_MenuIcon')} onClick={handleToggle}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <div ref={anchorRef}/>\r\n            \r\n            <Popper open={open} anchorEl={anchorRef.current} transition >\r\n                {({ TransitionProps }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        in={open}\r\n                        style={{ transformOrigin: 'right' }}\r\n                    >\r\n                        <Paper square elevation={0} className={props.router.getStyles('headerMenu')}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList autoFocusItem={open}>\r\n                                    <div hidden={(props.router.getUserID() === '') ? true : false}>\r\n                                        <MenuItem onClick={accountView}>Profile</MenuItem>\r\n                                        <Divider light={true} variant='middle' className={props.router.getStyles('divider')} />\r\n                                        <MenuItem onClick={viewMessages}>View Messages</MenuItem>\r\n                                        <Divider light={true} variant='middle' className={props.router.getStyles('divider')} />\r\n                                        <MenuItem onClick={accountSettings} >My account</MenuItem>\r\n                                        <Divider variant='middle' className={props.router.getStyles('divider')} />\r\n                                        <MenuItem onClick={logOut}>Logout</MenuItem>\r\n                                    </div>\r\n                                    <div>\r\n                                        <MenuItem onClick={handleClose}>---</MenuItem>\r\n                                        <Divider variant='middle' className={props.router.getStyles('divider')} />\r\n                                        <MenuItem onClick={handleClose}>About</MenuItem>\r\n                                    </div>\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n\r\n            </Popper>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeaderMenu.propTypes = {\r\n    /**\r\n     * The router component to be used, use MainWindowController for most cases\r\n     */\r\n    router: PropTypes.elementType,\r\n    /**\r\n     * The Header component parent to be used\r\n     */\r\n    header: PropTypes.elementType\r\n}","import { Avatar, Box, Button, Checkbox, Divider, FormControlLabel, Input, InputAdornment, Slide, TextField, Tooltip } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { AccountView } from \"./AccountView\";\r\nimport './Conversations.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * The AccountSettings window allows the current user to make common changes to their account, such as to their display name, roles, and avatar image.\r\n */\r\nexport class AccountSettings extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userEmail: '',\r\n            userDisplayName: '',\r\n            userDescription: '',\r\n            userGenres: '',\r\n            userRoles: [],\r\n            userLocation: '',\r\n            userPrivacySettings: [],\r\n            selection: 0,\r\n            changesMade: false,\r\n            avatarImage: '',\r\n            avatarURL: '',\r\n        };\r\n\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    /**\r\n     * Will load user data and avatar image.\r\n     */\r\n    componentDidMount() {\r\n        const userRef = firebase.database().ref('users/' + this.props.router.getUserID());\r\n        var userParse = '';\r\n\r\n        userRef.on('value', (snapshot) => {\r\n            userParse = snapshot.exportVal();\r\n            if (userParse) {\r\n                this.setState({\r\n                    userEmail: userParse.email,\r\n                    userDisplayName: userParse.displayname,\r\n                    userDescription: (userParse.description) ? userParse.description : '',\r\n                    userGenres: (userParse.genres) ? userParse.genres : '',\r\n                    userRoles: JSON.parse(userParse.roles),\r\n                    userLocation: (userParse.location) ? userParse.location : '',\r\n                    userPrivacySettings: JSON.parse(userParse.privacysettings),\r\n                }, () => {\r\n                    //userRef.off('value');\r\n                });\r\n            }\r\n        });\r\n\r\n        const avatarRef = firebase.storage().ref('images/' + this.props.router.getUserID());\r\n        if (avatarRef) {\r\n            avatarRef.getDownloadURL()\r\n                .then((url) => {\r\n                    this.setState({ avatarImage: url });\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Avatar image fetch failed: ' + error)\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submits changes and redirects to the current user's AccountView.\r\n     */\r\n    submitChanges = (event) => {\r\n        this.props.router.setLoadingState(true);\r\n\r\n        const userRef = firebase.database().ref('users/' + this.props.router.getUserID());\r\n        userRef.update({ \r\n            //email: this.state.userEmail,\r\n            displayname: this.state.userDisplayName,\r\n            description: this.state.userDescription,\r\n            //genres: this.state.userGenres,\r\n            roles: JSON.stringify(this.state.userRoles),\r\n            location: this.state.userLocation,\r\n            privacysettings: JSON.stringify(this.state.userPrivacySettings),\r\n        }, () => this.props.router.setLoadingState(false));\r\n\r\n        if (this.state.avatarURL) {\r\n            this.props.router.setLoadingState(true);\r\n            firebase.storage().ref().child('images/' + this.props.router.getUserID()).put(this.state.avatarImage).then((snapshot) => {\r\n                console.log('Avatar image upload success');\r\n            }).then(() => this.props.router.setLoadingState(false)).catch((error) => {\r\n                console.log('Avatar image upload fail' + error);\r\n            });\r\n        }\r\n\r\n        this.props.router.updateContent(<AccountView router={this.props.router} user={this.props.router.getUserID()}/>);\r\n    }\r\n\r\n    handleFileSelect = (event) => {\r\n        if (this.fileInput.current.files[0] !== this.state.avatarImage) {\r\n            this.setState({\r\n                avatarImage: this.fileInput.current.files[0],\r\n                avatarURL: URL.createObjectURL(this.fileInput.current.files[0]),\r\n                changesMade: true,\r\n            });\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({changesMade: true});\r\n\r\n        if (event.target.name.match('Producer|Engineer|Composer|Artist')) {\r\n            if (this.state.userRoles) {\r\n                var roles = this.state.userRoles;\r\n\r\n                if (event.target.checked) roles[event.target.name] = true;\r\n                else roles[event.target.name] = false;\r\n\r\n                this.setState({\r\n                    userRoles: roles,\r\n                });\r\n            }\r\n        }\r\n        else if (event.target.name.match('BrowseUsers|TracksPublic')) {\r\n            if (this.state.userPrivacySettings) {\r\n                var settings = this.state.userPrivacySettings;\r\n\r\n                if (event.target.checked) settings[event.target.name] = true;\r\n                else settings[event.target.name] = false;\r\n\r\n                this.setState({\r\n                    userPrivacySettings: settings,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ [event.target.name]: event.target.value });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conversations\">\r\n                <Box className=\"convo-section\">\r\n                    <div>\r\n                        <Slide in={true} direction=\"right\">\r\n                            <div>\r\n                            My Account\r\n                                <Button onClick={() => this.setState({selection: 0})} style={{ justifyContent: 'left', minWidth: '100%' }}>\r\n                                    Account Information\r\n                                </Button>\r\n                                <Divider />\r\n                                <Button onClick={() => this.setState({selection: 1})} style={{ justifyContent: 'left', minWidth: '100%' }}>\r\n                                    Privacy Settings\r\n                                </Button>\r\n                                <Divider />\r\n                                <Button onClick={() => this.setState({selection: 2})} style={{ justifyContent: 'left', minWidth: '100%' }}>\r\n                                    Display Preferences\r\n                                </Button>\r\n                            </div>\r\n                        </Slide>\r\n                    </div>\r\n                </Box>\r\n                <div className=\"user-convo\">\r\n                    <div style={{flexDirection: 'column'}} hidden={(this.state.selection === 0 ? false : true)}>\r\n                        Account Information\r\n                        <div>\r\n                            Custom Avatar\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <Avatar\r\n                                style={{ marginRight: '10px', width: '128px', height: '128px', }}\r\n                                src={(this.state.avatarURL) ? this.state.avatarURL : this.state.avatarImage}\r\n                            />\r\n                            <Tooltip title='Upload a custom avatar' arrow={true} placement='right'>\r\n                                <Input\r\n                                    style={{alignSelf: 'center'}}\r\n                                    type=\"file\"\r\n                                    inputProps={{ ref: this.fileInput, accept: 'image/png, image/gif, image/jpeg' }}\r\n                                    required={true}\r\n                                    onChange={this.handleFileSelect}\r\n                                    startAdornment={\r\n                                        <InputAdornment>\r\n                                            <AccountCircle />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <TextField\r\n                                        label=\"Display Name\"\r\n                                        placeholder='. . .'\r\n                                        name='userDisplayName'\r\n                                        value={this.state.userDisplayName}\r\n                                        onChange={this.handleChange}\r\n                                        size='small'\r\n                                        fullWidth\r\n                        />\r\n                        <TextField\r\n                                        label=\"Description\"\r\n                                        placeholder='. . .'\r\n                                        name='userDescription'\r\n                                        value={this.state.userDescription}\r\n                                        onChange={this.handleChange}\r\n                                        size='small'\r\n                                        fullWidth\r\n                        />\r\n                        <TextField\r\n                                        label=\"Location\"\r\n                                        placeholder='. . .'\r\n                                        name='userLocation'\r\n                                        value={this.state.userLocation}\r\n                                        onChange={this.handleChange}\r\n                                        size='small'\r\n                                        fullWidth\r\n                        />\r\n                        My Roles\r\n                        <Box display='flex' flexDirection='row'>\r\n                            {() => {\r\n                                if (this.state.userRoles) {                                \r\n                                    const initialRoles = ['Producer', 'Engineer', 'Composer', 'Artist'];\r\n                                \r\n                                    return initialRoles.map((role) => {\r\n                                        return <FormControlLabel\r\n                                                //Setting a random key seems to be the only way to make this element display the updated checked attribute\r\n                                                control={<Checkbox key={Math.random()} name={role} checked={this.state.userRoles[role]} onChange={this.handleChange} />}\r\n                                                label={role}\r\n                                                />\r\n                                    });\r\n                                }\r\n                            }}\r\n                        </Box>\r\n                    </div>\r\n                    <div hidden={(this.state.selection === 1 ? false : true)}>\r\n                        Privacy Settings \r\n                        <Box display='flex' flexDirection='row'>\r\n                        {() => {\r\n                                if (this.state.userPrivacySettings) {                                \r\n                                    const initialPrivacySettings = ['BrowseUsers', 'TracksPublic'];\r\n                                    const settingLabels = ['Show your profile on the public browse users page?', 'Allow unregistered users to view your tracks?']\r\n                                \r\n                                    return initialPrivacySettings.map((setting, index) => {\r\n                                        return <FormControlLabel\r\n                                                //Setting a random key seems to be the only way to make this element display the updated checked attribute\r\n                                                control={<Checkbox key={Math.random()} name={setting} checked={this.state.userPrivacySettings[setting]} onChange={this.handleChange} />}\r\n                                                label={settingLabels[index]}\r\n                                                />\r\n                                    });\r\n                                }\r\n                        }}\r\n                        </Box>\r\n                    </div>\r\n                    <div hidden={(this.state.selection === 2 ? false : true)}>\r\n                        Display Preferences \r\n                        <FormControlLabel\r\n                            control={<Checkbox/>}\r\n                            label=\"Display 1\"\r\n                        />\r\n                    </div>\r\n                    <Button disabled={!this.state.changesMade} onClick={this.submitChanges}>Submit</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Avatar, Card } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { AccountView } from \"./AccountView\";\r\n\r\n/**\r\n * A Card component that displays basic information about a user which can be clicked to open their corresponding AccountView.\r\n * \r\n */\r\nexport default class UserCard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            avatarURL: '',\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Will reference Firebase to display the user's avatar image.\r\n     */\r\n    componentDidMount() {\r\n        const avatarLocation = firebase.storage().ref().child('images/' + this.props.user);\r\n\r\n        if (avatarLocation) avatarLocation.getDownloadURL().then((url) => {\r\n            this.setState({\r\n                avatarURL: url\r\n            });\r\n        }).catch((error) => {\r\n            console.log('Avatar image fetch error: ' + error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box\r\n                display='flex'\r\n                flexDirection='row'\r\n                alignItems='center' m={4}\r\n                onClick={() => this.props.router.updateContent(<AccountView router={this.props.router} user={this.props.user} />)}\r\n            >\r\n                <Card elevation='6'>\r\n                    <Box display='flex' flexDirection='row' alignItems='center' p={2}>\r\n                        <Avatar style={{width: '96px', height: '96px', }} src={this.state.avatarURL}/>\r\n\r\n                        <Box\r\n                        display='flex'\r\n                        flexDirection='column'\r\n                        justifyContent='center'\r\n                        alignItems='flex-start'\r\n                        m={2}\r\n                        >\r\n                            <div style={{ fontSize: '18px' }}>\r\n                                {this.props.displayName}\r\n                            </div>\r\n                            <div style={{ fontSize: '14px' }}>\r\n                                {this.props.roles}\r\n                            </div>\r\n                            <div style={{ fontSize: '14px' }}>\r\n                                {this.props.location}\r\n                            </div>\r\n                        </Box>\r\n                    </Box>\r\n                </Card>\r\n            </Box>\r\n        )\r\n    }\r\n}","import { CardHeader, Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport UserCard from \"./UserCard\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * The BrowseUsers window displays the latest newly registered users as UserCards. Selecting a UserCard will load that user's AccountView.\r\n */\r\nexport class BrowseUsers extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            userList: [],\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        firebase.database().ref('users/').off('value');\r\n    }\r\n\r\n    /**\r\n     * Will load all user information from Firebase for parsing.\r\n     */\r\n    componentDidMount() {\r\n        var userRef = firebase.database().ref('users/');\r\n\r\n        userRef.on('value', (snapshot) => {\r\n            const users = snapshot.exportVal();\r\n            this.getUsers(users);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Reads all users to be shown, using only those that chose to be shown publicly on the BrowseUsers window.\r\n     * @param {*} uRef A Firebase reference for the list of users to load.\r\n     */\r\n    getUsers(uRef) {\r\n        const users = Object.entries(uRef);\r\n\r\n        var getUsersArr = [];\r\n            \r\n        users.map((currentUser) => {\r\n\r\n            var parsedRoles = JSON.parse(currentUser[1].roles);\r\n            var parsedSettings = JSON.parse(currentUser[1].privacysettings);\r\n\r\n            const userElement = <UserCard \r\n                                router={this.props.router} \r\n                                user={currentUser[0]} \r\n                                displayName={currentUser[1].displayname}\r\n                                roles={(currentUser[1].roles) ? Object.keys(parsedRoles).filter(role => parsedRoles[role] === true).join(\"|\") : ''}\r\n                                location={(currentUser[1].location) ? currentUser[1].location : ''}\r\n                                />\r\n\r\n            if (parsedSettings['BrowseUsers']) getUsersArr.push(userElement);\r\n        });\r\n\r\n        this.setState({\r\n            userList: getUsersArr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grow in={true}>\r\n                <Box display='flex' flexDirection='column' alignItems='center' justifyContent='space-between' height='100%'>\r\n                    <CardHeader title=\"Recent Users\" />\r\n                    <Grid container justify=\"center\">\r\n                        {this.state.userList}\r\n                    </Grid>\r\n                    <Box></Box>\r\n                </Box>\r\n            </Grow>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/speaker.1ca362d1.glb\";","import React from \"react\";\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport speaker from './3d/speaker.glb';\r\n\r\nconst scene = new THREE.Scene();\r\n\r\n/**\r\n * Renders a simple centered 3d animation\r\n */\r\nexport class ThreeBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.container = React.createRef();\r\n    }\r\n \r\n  componentDidMount() {\r\n    const camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.1, 1500 );\r\n\r\n    const renderer = new THREE.WebGLRenderer( {alpha: true, antialias: true} );\r\n    renderer.setSize( window.innerWidth*0.6, window.innerHeight*0.7 );\r\n    this.container.appendChild( renderer.domElement );\r\n    window.addEventListener( 'resize', onWindowResize, false );\r\n\r\n    const material = new THREE.MeshBasicMaterial( { color: 0xFFC300 } );\r\n\r\n    \r\n    // Old solution for loading random .glb model, replace geometry with imported .glb \r\n    //let currentGeometry;\r\n    \r\n    // switch(Math.floor(Math.random() * 3)) {\r\n    //   case 0:\r\n    //     currentGeometry = new THREE.BoxGeometry();\r\n    //     break;\r\n    //   case 1:\r\n    //     currentGeometry = new THREE.ConeGeometry();\r\n    //     break;\r\n    //   case 2:\r\n    //     currentGeometry = new THREE.DodecahedronGeometry();\r\n    //     break;\r\n    //   default: \r\n    //   currentGeometry = new THREE.BoxGeometry();\r\n    //     break;\r\n    // }\r\n\r\n    const loader = new GLTFLoader();\r\n\r\n    loader.load(speaker, function (gltf) {\r\n        gltf.scene.children.forEach(function(child) {\r\n            child.material = material;\r\n            child.material.needsUpdate = true;\r\n        });\r\n\r\n        scene.add(gltf.scene);\r\n\r\n        const animations = gltf.animations;\r\n        const mixer = new THREE.AnimationMixer(gltf.scene);\r\n        const clock = new THREE.Clock();\r\n\r\n        \r\n        animations.forEach( function ( clip ) {\r\n            mixer.clipAction( clip ).play();\r\n        } );\r\n        \r\n        gltf.scene.scale.set(0.2, 0.2, 0.2);\r\n\r\n        const composer = new EffectComposer( renderer );\r\n        composer.addPass( new RenderPass( scene, camera ) );\r\n\r\n        const animate = function () {\r\n            if ( mixer ) mixer.update( clock.getDelta()*2 );\r\n\r\n            requestAnimationFrame( animate );\r\n            gltf.scene.rotation.y += 0.01;\r\n            composer.render();\r\n        };\r\n\r\n        animate();\r\n\r\n    }, undefined, function (error) {\r\n        console.error(error);\r\n    });\r\n        \r\n    camera.position.z = 4;\r\n    camera.setViewOffset( window.innerWidth, window.innerHeight, window.innerWidth * 0, window.innerHeight * 0.2, window.innerWidth, window.innerHeight );\r\n\r\n    function onWindowResize(){\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.focus = 10;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n    }\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    scene.clear();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <div ref = {refNode => this.container = refNode}/>\r\n    );\r\n  }\r\n} ","import { Box, Button, CardHeader, Checkbox, FormControlLabel, Grow, IconButton, Slide, Step, StepLabel, Stepper, TextField } from \"@material-ui/core\";\r\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded';\r\nimport NavigateNextRoundedIcon from '@material-ui/icons/NavigateNextRounded';\r\nimport React from \"react\";\r\nimport firebase from '../../firebase';\r\n\r\n/**\r\n * Titles for account creation steps\r\n */\r\nconst steps = ['Credentials', 'Personalization', 'Privacy Settings'];\r\n\r\n/**\r\n * The NewAccount window allows the user to register a new account and set up publicly displayed information and privacy settings\r\n */\r\nexport class NewAccount extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeStep: 0,\r\n            inProp: true,\r\n            slideStep: 0,\r\n            userEmail: '',\r\n            userPassword: '',\r\n            userDescription: '',\r\n            userDisplayName: '',\r\n            userGenres: [],\r\n            userLocation: '',\r\n            userRoles: {'Producer': false, 'Engineer': false, 'Composer': false, 'Artist': false},\r\n            userPrivacySettings: {'BrowseUsers': true, 'TracksPublic': true},\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAccountCreation = this.handleAccountCreation.bind(this);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        if (event.target.name.match('Producer|Engineer|Composer|Artist')) {\r\n            var roles = this.state.userRoles;\r\n\r\n            if (event.target.checked) roles[event.target.name] = true;\r\n            else roles[event.target.name] = false;\r\n\r\n            this.setState({\r\n                userRoles: roles,\r\n            });\r\n        }\r\n        else if (event.target.name.match('BrowseUsers|TracksPublic')) {\r\n            var privacy = this.state.userPrivacySettings;\r\n\r\n            if (event.target.checked) privacy[event.target.name] = true;\r\n            else privacy[event.target.name] = false;\r\n\r\n            this.setState({\r\n                userPrivacySettings: privacy,\r\n            });\r\n        }\r\n        else this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a new account using Firebase's Auth service. If a user matched anonymously, the anonymous session account can be linked and an uploaded track \r\n     * will be added to the new account automatically.\r\n     */\r\n    handleAccountCreation = (event) => {\r\n\r\n        const userData = {\r\n            email: this.state.userEmail,\r\n            displayname: this.state.userDisplayName,\r\n            description: this.state.userDescription,\r\n            genres: this.state.userGenres,\r\n            roles: JSON.stringify(this.state.userRoles),                                                                          \r\n            location: this.state.userLocation,\r\n            privacysettings: JSON.stringify(this.state.userPrivacySettings),     \r\n        }\r\n\r\n        //If linking new account from anonymous \r\n        if (firebase.auth().currentUser) {\r\n            var credential = firebase.auth.EmailAuthProvider.credential(this.state.userEmail, this.state.userPassword);\r\n            firebase.auth().currentUser.linkWithCredential(credential)\r\n                .then((usercred) => {\r\n                    var user = usercred.user;\r\n                    firebase.database().ref('users/' + user.uid).update(userData);\r\n                    this.props.router.setUser(user);\r\n                }).catch((error) => {\r\n                    console.log(\"Error upgrading anonymous account\", error);\r\n                });\r\n        }\r\n        //If creating new account\r\n        else firebase.auth().createUserWithEmailAndPassword(this.state.userEmail, this.state.userPassword)\r\n            .then((userCredential) => {\r\n                var user = userCredential.user;\r\n                firebase.database().ref('users/' + user.uid).set(userData);\r\n                this.props.router.setUser(user);\r\n            })\r\n            .catch((error) => {\r\n                alert('Account creation error: ' + error);\r\n        });\r\n            \r\n        event.preventDefault();\r\n    }\r\n\r\n    returnButton = () => {\r\n        this.props.router.previousHandler();\r\n    };\r\n\r\n    backButton = () => {\r\n        const { activeStep } = this.state;\r\n\r\n        if (activeStep > 0) {\r\n            this.setState({\r\n                activeStep: activeStep - 1,\r\n                inProp: true,\r\n            }, () => this.setState({inProp: false}));\r\n        }\r\n    }\r\n\r\n    nextButton = () => {\r\n        const { activeStep } = this.state;\r\n\r\n        if (activeStep < steps.length-1) {\r\n            this.setState({\r\n                activeStep: activeStep + 1,\r\n                inProp: true,\r\n            }, () => this.setState({inProp: false}));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grow in={true}>\r\n                <Box display='flex' flexDirection='column' justifyContent='space-between' height='100%' textAlign='center'>\r\n                        <CardHeader title=\"Create New Account\"/>\r\n                        <Box display='flex' flexDirection='row' justifyContent='space-between' alignItems='center' mx={10}>\r\n                            <Box >\r\n                                <div style={{visibility: (this.state.activeStep === 0 ? 'hidden' : 'visible')}}>\r\n                                    <IconButton \r\n                                    onClick={() => this.backButton()}\r\n                                    >\r\n                                        <NavigateBeforeRoundedIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </Box>\r\n                            <Box display='flex' width='50%' flexDirection='column' justifyContent='center' alignSelf='center'>\r\n                                <Slide \r\n                                    in={this.state.inProp} \r\n                                    onExited={() => this.setState({inProp: !this.state.inProp, slideStep: this.state.activeStep})}\r\n                                    direction=\"up\"\r\n                                >\r\n                                    <div>\r\n                                        <div hidden={(this.state.slideStep === 0  ? false : true)}>\r\n                                            <Box display='flex' flexDirection='column'>\r\n                                                <TextField\r\n                                                    label=\"New Email\"\r\n                                                    name='userEmail'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    type='email'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <TextField\r\n                                                    label=\"New Password\"\r\n                                                    name='userPassword'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    type='password'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </Box>\r\n                                        </div>\r\n\r\n                                        <div hidden={(this.state.slideStep === 1  ? false : true)}>\r\n                                            <Box display='flex' flexDirection='column'>\r\n                                                <TextField\r\n                                                    label=\"Display Name\"\r\n                                                    name='userDisplayName'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <TextField\r\n                                                    label=\"Description\"\r\n                                                    name='userDescription'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <TextField\r\n                                                    label=\"Genres\"\r\n                                                    name='userGenres'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <TextField\r\n                                                    label=\"Location\"\r\n                                                    name='userLocation'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <h2 style={{textAlign: 'center'}}>\r\n                                                User Roles:\r\n                                                </h2>\r\n                                                <Box display='flex' flexDirection='row' alignSelf='center'  >\r\n                                                    <FormControlLabel\r\n                                                        control={<Checkbox id='0' name=\"Producer\" onChange={this.handleChange} />}\r\n                                                        label=\"Producer\"\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        control={<Checkbox id='1' name=\"Engineer\" onChange={this.handleChange} />}\r\n                                                        label=\"Engineer\"\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        control={<Checkbox id='2' name=\"Composer\" onChange={this.handleChange} />}\r\n                                                        label=\"Composer\"\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        control={<Checkbox id='3' name=\"Artist\" onChange={this.handleChange} />}\r\n                                                        label=\"Artist\"\r\n                                                    />\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </div>\r\n\r\n                                        <div hidden={(this.state.slideStep === 2  ? false : true)}>\r\n                                            <Box display='flex' flexDirection='column' justifyContent='center' alignItems='center'>\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox id='4' name=\"BrowseUsers\" defaultChecked={true} onChange={this.handleChange} />}\r\n                                                    label=\"Show your profile on the public browse users page?\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox id='5' name=\"TracksPublic\" defaultChecked={true} onChange={this.handleChange} />}\r\n                                                    label=\"Allow unregistered users to view your tracks?\"\r\n                                                />\r\n                                                <form onSubmit={this.handleAccountCreation}>\r\n                                                    <Box m={2}>\r\n                                                        <Button variant='outlined' className={this.props.router.getStyles('b_MainWindow')} type='submit'>Finish</Button>\r\n                                                    </Box>\r\n                                                </form>\r\n                                            </Box>\r\n                                        </div>\r\n                                    </div>\r\n                                </Slide>\r\n                            </Box>\r\n                            <Box>\r\n                            <div style={{visibility: (this.state.activeStep === 2 ? 'hidden' : 'visible')}}>\r\n                                    <IconButton  \r\n                                    onClick = {() => this.nextButton()}\r\n                                    >\r\n                                        <NavigateNextRoundedIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                        <Stepper\r\n                            activeStep={this.state.activeStep}\r\n                            alternativeLabel\r\n                        >\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel orientation=\"vertical\">{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        \r\n                </Box>\r\n            </Grow>\r\n        );\r\n    }\r\n}","import { Box, Button, CardHeader, Checkbox, CircularProgress, Collapse, FormControlLabel, Grow, IconButton, Input, InputAdornment, Slide, Step, StepLabel, Stepper, TextField, Tooltip } from \"@material-ui/core\";\r\nimport NavigateBeforeRoundedIcon from '@material-ui/icons/NavigateBeforeRounded';\r\nimport NavigateNextRoundedIcon from '@material-ui/icons/NavigateNextRounded';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport React from \"react\";\r\nimport firebase from '../../firebase';\r\nimport { NewAccount } from \"./NewAccount\";\r\nimport WaveForm from \"./WaveForm\";\r\n\r\n/**\r\n * Titles for describing the steps \r\n */\r\nconst steps = ['Upload Your Track', 'Describe This Track', 'Identify Problem Areas', 'Now Matching . . .', 'Review', 'Your Feedback'];\r\n\r\n/**\r\n * Definition for the initial state which is used if Matching is repeated\r\n */\r\nconst initialState = {\r\n    activeStep: 0,\r\n    inProp: true,\r\n    slideStep: 0,\r\n    matching: false,\r\n    sectionValid: false,\r\n    matchingStatus: '',\r\n    trackPreviewPlayer: '',\r\n    trackName: '',\r\n    trackDescription: '',\r\n    trackMetaData: ['', '', '', ''],\r\n    userID: '',\r\n    audioFile: '',\r\n    metaDataOther: '',\r\n    other: false,\r\n    trackIsPublic: false,\r\n    trackMatchPlayer: '',\r\n    mFolderID: '',\r\n    mTrackID: '',\r\n    mTrackName: '',\r\n    mMetaData: ['', '', '', ''],\r\n    mTrackDescription: '',\r\n    currentUserID: '',\r\n    currentFolderID: '',\r\n    currentTrackID: '',\r\n    reviewedTrackPlayer: '',\r\n    matchedUserID: '',\r\n    keepTracks: false,\r\n    anonymousID: '',\r\n};\r\n\r\n/**\r\n * The Match window allows two users to exchange a work-in-progress track for immediate feedback.\r\n */\r\nexport class Match extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = initialState;\r\n\r\n        this.handleFileSelect = this.handleFileSelect.bind(this);\r\n        this.handleMatch = this.handleMatch.bind(this);\r\n        this.finishReview = this.finishReview.bind(this);\r\n        this.drawMatchTrack = this.drawMatchTrack.bind(this);\r\n        this.cleanup = this.cleanup.bind(this);\r\n        this.matchAgain = this.matchAgain.bind(this);\r\n\r\n        this.fileInput = React.createRef();\r\n        this.previewRef = React.createRef();\r\n    }\r\n\r\n    /**\r\n     * Calls the cleanup function, initializes state, and detaches the firebase child_added callback\r\n     */\r\n    componentWillUnmount() {\r\n        this.cleanup();\r\n        this.state = initialState;\r\n        firebase.database().ref('matching/').off('child_added');\r\n    }\r\n\r\n    /**\r\n     * @returns A promise to remove matching data on firebase when necessary\r\n     */\r\n    cleanup = () => {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.state.currentUserID) {\r\n                firebase.database().ref('matching/' + this.state.currentUserID).remove().catch((error) => {\r\n                    console.log('Matching DB cleanup error: ' + error);\r\n                });\r\n\r\n                if (!this.props.router.getUserID() && !this.state.keepTracks) {\r\n                    firebase.database().ref('users/' + this.state.currentUserID).remove().catch(function (error) {\r\n                        console.log(\"User DB cleanup fail: \" + error.message)\r\n                    });\r\n                }\r\n\r\n                if (!this.state.trackIsPublic && !this.state.keepTracks) {\r\n                    firebase.database().ref('users/' + this.state.currentUserID + '/audio/'\r\n                        + this.state.currentFolderID + '/' + this.state.currentTrackID).remove().catch(function (error) {\r\n                            console.log(\"User DB cleanup fail: \" + error.message)\r\n                        });\r\n\r\n                    firebase.storage().ref().child('audio/' + this.state.currentFolderID + '/' + this.state.currentTrackID).delete().catch((error) => {\r\n                        console.log('Storage cleanup error: ' + error);\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Begins a new matching session\r\n     */\r\n    matchAgain = () => {\r\n        this.cleanup().then(\r\n            this.props.router.updateContent(<Match router={this.props.router} user={this.props.router.getUserID()} />)\r\n        ).catch((error) => {\r\n            console.log('Cleanup error: ' + error);\r\n        });\r\n    }\r\n\r\n    backButton = (event) => {\r\n        const { activeStep } = this.state;\r\n\r\n        if (activeStep > 0) {\r\n            this.setState({\r\n                activeStep: activeStep - 1,\r\n                inProp: true,\r\n            }, () => { this.checkSection(); this.setState({ inProp: false }); });\r\n        }\r\n\r\n        if (event) event.preventDefault();\r\n    }\r\n\r\n    nextButton = (event) => {\r\n        const { activeStep } = this.state;\r\n\r\n        if (activeStep < steps.length - 1) {\r\n            this.setState({\r\n                activeStep: activeStep + 1,\r\n                inProp: true,\r\n            }, () => this.setState({ inProp: false, sectionValid: false }));\r\n        }\r\n\r\n        if (event) event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Checks to see if a step's required fields are filled\r\n     */\r\n    checkSection() {\r\n        if (this.state.activeStep === 1 && this.state.trackName\r\n            || this.state.activeStep === 0 && this.state.trackPreviewPlayer)\r\n            this.setState({ sectionValid: true });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        if (event.target.name.match('Mixing|Mastering|Arrangement')) {\r\n            var metaDataArr = [...this.state.trackMetaData];\r\n            const index = parseInt(event.target.id);\r\n            if (event.target.checked) metaDataArr[index] = event.target.name;\r\n            else metaDataArr[index] = '';\r\n\r\n            this.setState({\r\n                trackMetaData: metaDataArr,\r\n            })\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name]: event.target.value,\r\n            }, () => {\r\n                if (event.target.name.match('metaDataOther')) {\r\n                    var metaDataArr = [...this.state.trackMetaData]\r\n                    metaDataArr[3] = this.state.metaDataOther;\r\n                    this.setState({ trackMetaData: metaDataArr });\r\n                }\r\n                this.checkSection();\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFileSelect = (event) => {\r\n        if (this.fileInput.current.files[0] !== this.state.audioFile) {\r\n            this.setState({\r\n                audioFile: this.fileInput.current.files[0]\r\n            }, () => this.drawPreview(this.fileInput.current.files[0]))\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Draws a Waveform preview of the track to be shared\r\n     */\r\n    drawPreview = (args) => {\r\n        const waveObj = <WaveForm\r\n            isChild={false}\r\n            preview={true}\r\n            router={this.props.router}\r\n            audiofile={args}\r\n            trackname={this.state.trackName}\r\n            metadata={[]}\r\n            description=''\r\n        />;\r\n\r\n        this.setState({\r\n            trackPreviewPlayer: ''\r\n        }, () => this.setState({ trackPreviewPlayer: waveObj, sectionValid: true }))\r\n    }\r\n\r\n    /**\r\n     * Draws the Waveform of a track obtained from a matched user\r\n     */\r\n    drawMatchTrack = () => {\r\n\r\n        const matchingRef = firebase.database().ref('matching/' + this.state.currentUserID + '/matchObject');\r\n\r\n        let matchingListener = matchingRef.on('value', (snapshot) => {\r\n            const matchObj = snapshot.val();\r\n\r\n            const usersRef = firebase.database().ref('users/' + matchObj.matchID + '/audio/' + matchObj.folder + '/' + matchObj.track);\r\n\r\n            let usersListener = usersRef.on('value', (snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    const trackData = snapshot.val();\r\n\r\n                    const waveObj = <WaveForm\r\n                        isChild={false}\r\n                        router={this.props.router}\r\n                        audiofile={matchObj.matchID + '/audio/' + matchObj.folder + '/' + matchObj.track}\r\n                        trackname={trackData.trackname}\r\n                        metadata={trackData.metadata}\r\n                        description={trackData.description}\r\n                        folderID={matchObj.folder}\r\n                        trackID={matchObj.track}\r\n                        userID={matchObj.matchID}\r\n                    />;\r\n\r\n                    this.setState({\r\n                        trackMatchPlayer: waveObj,\r\n                        mFolderID: trackData.folderID,\r\n                        mTrackID: trackData.trackID,\r\n                        mTrackName: trackData.trackname,\r\n                        mMetaData: trackData.metadata,\r\n                        mTrackDescription: trackData.description,\r\n                    });\r\n\r\n                    matchingRef.off('value', matchingListener);\r\n                    usersRef.off('value', usersListener);\r\n\r\n                    firebase.database().ref('matching/' + this.state.currentUserID).remove().catch(function (error) {\r\n                        console.log(\"Matching DB cleanup fail: \" + error.message)\r\n                    });\r\n\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @summary Begins a new matching session. \r\n     * @description Firebase contains a /matching/ directory which queues new users waiting for a match. In this function, a firebase listener\r\n     * waits for a new child to be added in /matching/ whose user ID does not belong to the current user. When one is found, a 'matchObject' is added to that user's\r\n     * directory in /matching/. For the user that just queued, a listener is added to their own /matching/ directory looking for a matchObject created from a\r\n     * waiting user. When one is found, this completes the session and the two users exchange tracks and account info when available. Users can match anonymously\r\n     * when not using a registered account.\r\n     */\r\n    handleMatch = (event) => {\r\n        this.nextButton();\r\n\r\n        var newSessionID = '';\r\n\r\n        function anonymousAuth() {\r\n            firebase.auth().signInAnonymously().then(() => {\r\n                firebase.auth().onAuthStateChanged((user) => {\r\n                    //this.props.router.setUser(user);\r\n                    newSessionID = user.uid;\r\n                    this.setState({ anonymousID: user.uid });\r\n                    createMatchSession();\r\n                });\r\n            })\r\n        }\r\n\r\n        function createMatchSession() {\r\n\r\n            var newFolderID = '';\r\n            var fRef = firebase.database().ref().push();\r\n            newFolderID = fRef.key;\r\n\r\n            var tRef = firebase.database().ref().push();\r\n            var newTrackID = tRef.key;\r\n\r\n            // Use hooks to set/clear timeout as needed \r\n            // var matchTimeOut = setTimeout(() => {\r\n            //     alert('Session timeout');\r\n            //     this.matchAgain();\r\n            // }, 5000);\r\n\r\n            if (newSessionID) {\r\n                this.setState({\r\n                    matchingStatus: 'Uploading your track . . .',\r\n                    currentUserID: newSessionID,\r\n                    currentFolderID: newFolderID,\r\n                    currentTrackID: newTrackID,\r\n                }, () => {\r\n                    const storageRef = firebase.storage().ref().child(this.state.currentUserID + '/audio/' + newFolderID + '/' + newTrackID);\r\n                    var newAudioFile = this.state.audioFile;\r\n\r\n                    storageRef.put(newAudioFile).then((snapshot) => {\r\n                        if (this.state.currentUserID) {\r\n                            console.log('File upload success');\r\n\r\n                            this.setState({ matchingStatus: 'Searching for match . . .' });\r\n\r\n                            firebase.database().ref('users/' + this.state.currentUserID + '/audio/' + newFolderID + '/' + newTrackID).set({\r\n                                folderID: newFolderID,\r\n                                trackID: newTrackID,\r\n                                userID: this.state.currentUserID,\r\n                                trackname: this.state.trackName,\r\n                                description: this.state.trackDescription,\r\n                                metadata: this.state.trackMetaData,\r\n                                commentdata: ['']\r\n                            }).then(() => {\r\n                                firebase.database().ref('matching/' + this.state.currentUserID).set({\r\n                                    test: true\r\n                                }).catch((error) => {\r\n                                    console.log('Matching queue fail - ' + error);\r\n                                });\r\n\r\n                                const matchData = {\r\n                                    matchID: this.state.currentUserID,\r\n                                    folder: newFolderID,\r\n                                    track: newTrackID\r\n                                };\r\n\r\n                                const newMatchUserRef = firebase.database().ref('matching/').limitToLast(1)\r\n\r\n                                let newMatchUserListener = newMatchUserRef.on('child_added', (data) => {\r\n                                    if (data.key !== this.state.currentUserID) {\r\n                                        firebase.database().ref('matching/' + data.key).update({ matchObject: matchData });\r\n                                    }\r\n                                });\r\n\r\n                                const currentUserRef = firebase.database().ref('matching/' + this.state.currentUserID);\r\n\r\n                                let currentUserListener = currentUserRef.on('child_added', (data) => {\r\n                                    if (data.key === 'matchObject') {\r\n                                        const matchedUser = firebase.database().ref('matching/' + data.child('matchID').val());\r\n                                        if (data.child('matchID').val() !== this.state.currentUserID) {\r\n                                            matchedUser.update({ matchObject: matchData });\r\n                                            this.setState({ matchedUserID: data.child('matchID').val() });\r\n                                            console.log('Matched user ID: ' + this.state.matchedUserID);\r\n\r\n                                            newMatchUserRef.off('child_added', newMatchUserListener);\r\n                                            currentUserRef.off('child_added', currentUserListener);\r\n\r\n                                            this.nextButton();\r\n                                            this.drawMatchTrack();\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }).catch((error) => {\r\n                                alert('Matching fail' + error);\r\n                            });\r\n                        }\r\n                        else {\r\n                            console.log('Match session creation fail - session canelled during upload');\r\n                            storageRef.delete();\r\n                        }\r\n                    }).catch((error) => {\r\n                        alert('File Upload fail' + error);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert('Cannot match - user auth failure');\r\n                this.matchAgain();\r\n            }\r\n        }\r\n\r\n        createMatchSession = createMatchSession.bind(this);\r\n        anonymousAuth = anonymousAuth.bind(this);\r\n\r\n        if (this.props.router.getUserID()) {\r\n            newSessionID = this.props.router.getUserID();\r\n            createMatchSession();\r\n        }\r\n        else {\r\n            anonymousAuth()\r\n        };\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Finishes the matching session and shows the current user's reviewed track\r\n     */\r\n    finishReview = (event) => {\r\n\r\n        const reviewedTrack = <WaveForm\r\n            isChild={false}\r\n            controller={this}\r\n            router={this.props.router}\r\n            audiofile={this.state.currentUserID + '/audio/' + this.state.currentFolderID + '/' + this.state.currentTrackID}\r\n            trackname={this.state.trackName}\r\n            metadata={this.state.trackMetaData}\r\n            description={this.state.trackDescription}\r\n            folderID={this.state.currentFolderID}\r\n            trackID={this.state.currentTrackID}\r\n            userID={this.state.currentUserID}\r\n        />;\r\n\r\n        this.setState({ reviewedTrackPlayer: reviewedTrack }, this.nextButton());\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grow in={true}>\r\n                <Box display='flex' flexDirection='column' justifyContent='space-between' height='100%' textAlign='center'>\r\n                    <CardHeader title=\"Instant Matching\" />\r\n                    <Box height='30%' width='100%' display='flex' flexDirection='column' justifyContent='center' alignItems='center'>\r\n                        <div hidden={(this.state.slideStep >= 3) ? true : false}>\r\n                            <Collapse in={this.state.trackPreviewPlayer}>\r\n                                <Box>{this.state.trackPreviewPlayer}</Box>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Box>\r\n\r\n                    <Box display='flex' flexDirection='row' width='70%' justifyContent='space-between' alignSelf='center' alignItems='center'>\r\n                        <Box>\r\n                            <div style={{ visibility: (this.state.activeStep === 0 || this.state.activeStep >= 3 ? 'hidden' : 'visible') }}>\r\n                                <IconButton\r\n                                    onClick={() => this.backButton()}\r\n                                >\r\n                                    <NavigateBeforeRoundedIcon fontSize='large'/>\r\n                                </IconButton>\r\n                            </div>\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='column' alignContent='center'>\r\n                            <h2>{steps[this.state.activeStep]}</h2>\r\n                        </Box>\r\n                        <Box>\r\n                            <Tooltip\r\n                                title='Please fill out all required fields'\r\n                                arrow={true}\r\n                                placement='right'\r\n                                disableHoverListener={this.state.sectionValid}\r\n                            >\r\n                                <div style={{ visibility: (this.state.activeStep >= 3 ? 'hidden' : 'visible') }}>\r\n                                    <IconButton\r\n                                        onClick={() => this.nextButton()}\r\n                                        disabled={!this.state.sectionValid}\r\n                                    >\r\n                                        <NavigateNextRoundedIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box display='flex' height='70%' width='50%' flexDirection='column' justifyContent='center' alignSelf='center' mx={5}>\r\n                        <Slide\r\n                            in={this.state.inProp}\r\n                            onExited={() => this.setState({ inProp: !this.state.inProp, slideStep: this.state.activeStep })}\r\n                            direction=\"up\"\r\n                        >\r\n                            <div>\r\n                                <div hidden={(this.state.slideStep === 0 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column'>\r\n                                        <Input\r\n                                            type=\"file\"\r\n                                            inputProps={{ ref: this.fileInput, accept: 'audio/flac, audio/m4a, audio/wav, audio/mp3, audio/aac' }}\r\n                                            required={true}\r\n                                            onChange={this.handleFileSelect}\r\n                                            startAdornment={\r\n                                                <InputAdornment>\r\n                                                    <PublishIcon />\r\n                                                </InputAdornment>\r\n                                            }\r\n                                        />\r\n                                    </Box>\r\n                                </div>\r\n                                <div hidden={(this.state.slideStep === 1 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column'>\r\n                                        <TextField\r\n                                            label=\"Track Name\"\r\n                                            name='trackName'\r\n                                            placeholder='. . .'\r\n                                            size='medium'\r\n                                            required='true'\r\n                                            value={this.state.trackName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <TextField\r\n                                            label=\"Description\"\r\n                                            name='trackDescription'\r\n                                            placeholder='. . .'\r\n                                            size='medium'\r\n                                            value={this.state.trackDescription}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Box>\r\n                                </div>\r\n                                <div hidden={(this.state.slideStep === 2 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column'>\r\n                                        <div>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='0' name=\"Mixing\" onChange={this.handleChange} />}\r\n                                                label=\"Mixing\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='1' name=\"Mastering\" onChange={this.handleChange} />}\r\n                                                label=\"Mastering\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox id='2' name=\"Arrangement\" onChange={this.handleChange} />}\r\n                                                label=\"Arrangement\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox name=\"other\" onClick={() => { this.setState({ other: !this.state.other }) }} />}\r\n                                                label=\"Other\"\r\n                                            />\r\n                                            <Collapse in={this.state.other ? true : false} display='flex' flexDirection='column'>\r\n                                                <div>Please specify \"Other\" tag (Limit 12 characters):</div>\r\n                                                <TextField\r\n                                                    name='metaDataOther'\r\n                                                    placeholder='. . .'\r\n                                                    size='medium'\r\n                                                    inputProps={{ maxLength: 12 }}\r\n                                                    value={this.state.metaDataOther}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </Collapse>\r\n                                            <div hidden={(this.props.router.getUserID() ? false : true)}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            name=\"trackIsPublic\"\r\n                                                            onClick={() => { this.setState({ trackIsPublic: !this.state.trackIsPublic }) }}\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"Save track to account\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <Button onClick={this.handleMatch} variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Match</Button>\r\n                                    </Box>\r\n                                </div>\r\n                                <div hidden={(this.state.slideStep === 3 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column' alignItems='center'>\r\n                                        <h2>{this.state.matchingStatus}</h2>\r\n                                        <CircularProgress />\r\n                                    </Box>\r\n                                </div>\r\n                                <div hidden={(this.state.slideStep === 4 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column'>\r\n                                        Please offer constructive criticism.\r\n                                        {this.state.trackMatchPlayer}\r\n                                        <Button onClick={this.finishReview} variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Continue</Button>\r\n                                    </Box>\r\n                                </div>\r\n                                <div hidden={(this.state.slideStep === 5 ? false : true)}>\r\n                                    <Box display='flex' flexDirection='column'>\r\n                                        Your feedback is here:\r\n                                        {this.state.reviewedTrackPlayer}\r\n                                        <Button onClick={this.matchAgain} variant='outlined' className={this.props.router.getStyles('b_MainWindow')}>Match Again</Button>\r\n                                        <div hidden={(this.props.router.getUserID() ? true : false)}>\r\n                                            <Button\r\n                                                onClick={() => {\r\n                                                    this.setState({ keepTracks: true },\r\n                                                        () => this.props.router.updateContent(<NewAccount router={this.props.router} anonymousID={this.state.anonymousID} />))\r\n                                                }\r\n                                                }\r\n                                                variant='outlined'\r\n                                                className={this.props.router.getStyles('b_MainWindow')}\r\n                                            >\r\n                                                Create An Account\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Box>\r\n                                </div>\r\n                            </div>\r\n                        </Slide>\r\n                    </Box>\r\n                    <Stepper\r\n                        activeStep={this.state.activeStep}\r\n                        alternativeLabel\r\n                        size='small'\r\n                    >\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel orientation=\"vertical\">{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n\r\n                </Box>\r\n            </Grow>\r\n        );\r\n    }\r\n}","import { Button, CardHeader } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { DoubleArrow } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { ThreeBackground } from '../ThreeBackground.js';\r\nimport { Match } from \"./Match\";\r\nimport { NewAccount } from \"./NewAccount\";\r\n\r\n/**\r\n * The Introduction window is the default window to be loaded on Ruffmix, containing links to learn about the process, create a new account,\r\n * or start a matching session.\r\n */\r\nexport class Introduction extends React.Component {\r\n\r\n    newAccount = () => {\r\n        this.props.router.updateContent(<NewAccount router={this.props.router}/>);\r\n    };\r\n    \r\n    startMatch = () => {\r\n        this.props.router.updateContent(<Match router={this.props.router}/>);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grow in={true} timeout={2000}>\r\n                <Box display='flex' flexDirection='column' justifyContent='space-between' height='100%'>\r\n                    <ThreeBackground/>\r\n                    <Box height=\"20%\"><CardHeader titleTypographyProps={{variant: 'h3'}} title=\"Welcome\"/></Box>\r\n                    <Box mx='20%' display='flex' height=\"60%\" flexDirection='column' justifyContent='space-evenly'\r\n                        style={{fontSize: 20, textAlign: 'center'}}>\r\n                        <Box position='fixed' width='40%' alignSelf='center' fontSize={24} > \r\n                            Ruffmix is a tool for producers, musicians, and creators to share their works-in-progress and get feedback instantly.\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='column' mt={25} p={5}>\r\n                            <Button variant= 'outlined' className={this.props.router.getStyles('b_Introduction')} onClick={() => this.startMatch()}>\r\n                                Match Anonymously\r\n                            </Button>\r\n                            <Box mt={1}/>\r\n                            <Button variant= 'outlined' className={this.props.router.getStyles('b_Introduction')} onClick={() => this.newAccount()}>\r\n                                Create New Account\r\n                            </Button>\r\n                        </Box>\r\n                    </Box> \r\n\r\n                    <Box height=\"20%\" mb='1%' mr='1%' display='flex' flexDirection='row-reverse' alignItems='flex-end'>\r\n                        <Button variant='outlined' endIcon={<DoubleArrow />} className={this.props.router.getStyles('b_MainWindow')}>\r\n                            How it works\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Grow>\r\n        )\r\n    }\r\n}","import { Box, Button, CardHeader, Grow, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport firebase from '../../firebase';\r\nimport { NewAccount } from \"./NewAccount\";\r\n\r\n/**\r\n * The Login window handles the login of a registered user.\r\n */\r\nexport class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleLogin = (event) => {\r\n        firebase.auth().signInWithEmailAndPassword(this.state.username, this.state.password)\r\n            .then((userCredential) => {\r\n                console.log('User login success');\r\n            })\r\n            .catch((error) => {\r\n                alert('Login fail' + error);\r\n            });\r\n\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Grow in={true}>\r\n                <Box display='flex' flexDirection='column' justifyContent='space-between' height='100%' textAlign='center'>\r\n                        <CardHeader title=\"Login to Ruffmix\"/>\r\n                        <Box display='flex' flexDirection='column' className={this.props.router.getStyles('formContent')}>\r\n                            <form onSubmit={this.handleLogin}>\r\n                                <Box display='flex' flexDirection='column' justifyContent='center' alignItems='center' >\r\n                                    <TextField\r\n                                        label=\"Email\"\r\n                                        name='username'\r\n                                        placeholder='. . .'\r\n                                        size='medium'\r\n                                        type='email'\r\n                                        value={this.state.username} \r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Password\"\r\n                                        name='password'\r\n                                        placeholder='. . .'\r\n                                        size='medium'\r\n                                        type='password'\r\n                                        value={this.state.password} \r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    <Box mt={4}>\r\n                                        <Button variant='outlined' className={this.props.router.getStyles('b_MainWindow')} type='submit'>Log In</Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>   \r\n                        <Box display='flex' flexDirection='column' alignItems='center' pb={4}>\r\n                            <Button \r\n                            variant='outlined' \r\n                            className={this.props.router.getStyles('b_MainWindow')}\r\n                            onClick={() => this.props.router.updateContent(<NewAccount router={this.props.router}/>)}\r\n                            >\r\n                                Create New Account\r\n                            </Button>\r\n                        </Box>                     \r\n                </Box>\r\n            </Grow>\r\n        );\r\n    }\r\n}","import { Button, Divider, IconButton, Link } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport React from \"react\";\r\nimport './Header.css';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport { AccountSettings } from \"./Window/AccountSettings\";\r\nimport { AccountView } from \"./Window/AccountView\";\r\nimport { BrowseUsers } from \"./Window/BrowseUsers\";\r\nimport { Introduction } from \"./Window/Introduction\";\r\nimport { Login } from './Window/Login';\r\nimport { Match } from './Window/Match';\r\nimport { UploadTrack } from \"./Window/UploadTrack\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * The Header Component is the basic header bar for navigation.\r\n */\r\nexport class Header extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * The router component to be used, use MainWindowController for most cases\r\n         */\r\n        router: PropTypes.elementType\r\n    }\r\n\r\n    /**\r\n     * Loads the Match window to begin a matching session\r\n     */\r\n    startMatch() {\r\n        this.props.router.updateContent(<Match router={this.props.router}/>);\r\n    }\r\n\r\n    /**\r\n     * Loads the Introduction window \r\n     */\r\n    introduction() {\r\n        this.props.router.updateContent(<Introduction router={this.props.router}/>);\r\n    }\r\n\r\n    /**\r\n     * Loads the Login window\r\n     */\r\n    login() {\r\n        this.props.router.updateContent(<Login router={this.props.router}/>);\r\n    }\r\n\r\n    /**\r\n     * Loads the AccountView Window\r\n     */\r\n    accountView() {\r\n        this.props.router.updateContent(<AccountView router={this.props.router} user={this.props.router.getUserID()}/>);\r\n    }\r\n\r\n    /**\r\n     * Loads the AccountSettings Window\r\n     */\r\n    accountSettings() {\r\n        this.props.router.updateContent(<AccountSettings router={this.props.router} user={this.props.router.getUserID()}/>);\r\n    }\r\n\r\n    /**\r\n     * Loads the UploadTrack window\r\n     */\r\n    uploadTrack() {\r\n        if (this.props.router.getUserID()) this.props.router.updateContent(<UploadTrack router={this.props.router}/>);\r\n        else this.login();\r\n    }\r\n\r\n    /**\r\n     * Loads the BrowseUsers window\r\n     */\r\n    browseUsers() {\r\n        this.props.router.updateContent(<BrowseUsers router={this.props.router}/>);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <body className=\"header-bar\">\r\n                <div className=\"header-left\" >\r\n                    <Button variant='outlined' className={this.props.router.getStyles('b_AccentPrimary')} onClick={() => this.startMatch()}>match now</Button>\r\n                    <Divider className={this.props.router.getStyles('divider')} orientation='vertical'/>\r\n                    <Button startIcon={<PublishIcon/>} variant='outlined' className={this.props.router.getStyles('b_AccentSecondary')}  onClick={() => this.uploadTrack()}>upload</Button>\r\n                    <Divider className={this.props.router.getStyles('divider')} orientation='vertical'/>\r\n                    <Button variant='outlined' className={this.props.router.getStyles('b_AccentSecondary')}  onClick={() => this.browseUsers()}>browse users</Button>\r\n                </div>\r\n                <Link color=\"#inherit\" component=\"button\" className=\"header-center\" onClick={() => this.introduction()}>ruffmix</Link>\r\n                <div className=\"header-right\">\r\n                    <HeaderMenu router={this.props.router} header={this} />\r\n                    <div hidden={(this.props.router.getUserID() === '') ? false : true}>\r\n                        <Button className={this.props.router.getStyles('b_AccentSecondary')} variant='outlined' onClick={() => this.login()}>login</Button>\r\n                    </div>\r\n                    <div hidden={(this.props.router.getUserID() === '') ? true : false}>\r\n                        <IconButton className={this.props.router.getStyles('b_AccountCircle')} onClick={() => this.accountView()}>\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </body>\r\n        );\r\n    }\r\n}\r\n","import { Backdrop, Card, CircularProgress, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Header } from '../Header';\r\nimport { AccountView } from './AccountView';\r\nimport { Introduction } from './Introduction';\r\nimport './MainWindowController.css';\r\n\r\n/**\r\n * The MainWindowController is responsible for \"routing\" all content shown in the main window of Ruffmix.\r\n * This component should be passed to all other root components that will be shown in the main window in order to route content and provide \r\n * information about the currently logged in user.\r\n * \r\n * @example <AccountView user={user.uid} router={this} /> //Will pass this component as the router\r\n * //Then in AccountView, to get the current user ID:\r\n * this.props.router.getUserID();\r\n * //A window component should also use MainWindowController to load new content to the router:\r\n * this.props.router.updateContent(<Match router={this.props.router}/>);\r\n */\r\nexport class MainWindowController extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            content: <Introduction router={this} />,\r\n            prevContent: \"\",\r\n            nextContent: \"\",\r\n            // userState: false,\r\n            userID: '',\r\n            userDisplayName: '',\r\n            refresh: false,\r\n            isLoading: false,\r\n            styleProvider: this.props.styleProviderClass,\r\n            headerBar: <Header router={this}/>,\r\n        };\r\n\r\n        this.controllerRef = React.createRef();\r\n\r\n        this.updateContent = this.updateContent.bind(this);\r\n        this.goToPrevious = this.goToPrevious.bind(this);\r\n        // this.updateUserState = this.updateUserState.bind(this);\r\n        this.getUserState = this.getUserState.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Used to get the dimensions of the window\r\n     * @returns The main window dimensions\r\n     */\r\n    getDimensions() {\r\n        if (this.controllerRef.current) return this.controllerRef.current.offsetWidth;\r\n        else return 0;\r\n    }\r\n\r\n    /**\r\n     * Returns a style object to be used with a component\r\n     * @param {Object} props The style definition found in Styles.js to be used with a component\r\n     * @returns A style definition from Styles.js\r\n     * @example <Button className={this.props.router.getStyles('b_MainWindow')} \r\n     */\r\n    getStyles(props) {\r\n        return this.state.styleProvider[props];\r\n    }\r\n\r\n    // updateUserState = () => { \r\n    //     this.setState({\r\n    //         userState: true,\r\n    //     })\r\n    // }\r\n\r\n    getUserState() {\r\n        return this.state.userState;\r\n    }\r\n\r\n    /**\r\n     * Controls the loading backdrop for the main window\r\n     * @param {boolean} val The loading boolean\r\n     * @example\r\n     * this.props.router.setLoadingState(false) //The loading backdrop can be used when file transfers or loading is done\r\n     */\r\n    setLoadingState(val) {\r\n        this.setState({\r\n            isLoading: val,\r\n        })\r\n    }\r\n\r\n    setUser(userObj) {\r\n        this.setState({\r\n            userID: userObj.uid,\r\n            userDisplayName: userObj.displayname,\r\n        }, () => this.refreshWindow())\r\n    }\r\n\r\n    /**\r\n     * @returns The current user's ID created from a firebase key\r\n     */\r\n    getUserID() {\r\n        return this.state.userID;\r\n    }\r\n\r\n    /**\r\n     * @returns The current user's display name\r\n     */\r\n    getDisplayName() {\r\n        return this.state.userDisplayName;\r\n    }\r\n\r\n    refreshWindow(){\r\n        this.setState({\r\n            refresh: !this.state.refresh,\r\n            headerBar: <Header router={this}/>\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Signs out the current user\r\n     */\r\n    signOut() {\r\n        firebase.auth().signOut().then(() => {\r\n            console.log('Signout success');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            console.log('Signout fail: ' + error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Will automatically load the currently logged in user's AccountView window, otherwise loads the Introduction window\r\n     */\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user && !user.isAnonymous) {\r\n                if (user) {\r\n                    this.setState({\r\n                        userID: user.uid,\r\n                        userDisplayName: user.displayname,\r\n                        content: <AccountView user={user.uid} router={this} />,\r\n                    }, () => this.refreshWindow());\r\n                }\r\n            } \r\n            if (!user) {\r\n                console.log('User logout');\r\n                this.setState({\r\n                    content: <Introduction router={this} />,\r\n                }, () => this.refreshWindow());\r\n            }\r\n\r\n        }.bind(this));\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Changes the MainWindowController's content\r\n     * @param {Object} props The content to be used in the update\r\n     * @example\r\n     * //A window component should use MainWindowController to load new content to the router:\r\n     * this.props.router.updateContent(<Match router={this.props.router}/>);\r\n     */\r\n    updateContent(props) {\r\n            this.setState({\r\n                content: null\r\n            },()=> {\r\n                this.setState({\r\n                    content: props,\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    goToPrevious() {\r\n        this.setState({\r\n            content: this.state.prevContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.className;\r\n\r\n        return (\r\n            <div>\r\n                <Backdrop style={{zIndex: '10'}} open={this.state.isLoading}>\r\n                    <Card \r\n                    style={{width: '20%', height: '20%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly'}}>\r\n                        <CircularProgress/>Loading . . .\r\n                    </Card>\r\n                </Backdrop>\r\n                \r\n                {this.state.headerBar}\r\n                <Grow in={true} timeout={2000}>\r\n                    <Card elevation={3} className=\"main-window-card\">\r\n                        {this.state.content}\r\n                    </Card>\r\n                </Grow>\r\n            </div>\r\n        );\r\n    }\r\n}","import { alpha } from \"@material-ui/core\";\r\nimport { amber, blueGrey } from '@material-ui/core/colors';\r\n\r\nconst darkBlue = '#2f3847';\r\nconst blueGreyFade = alpha(blueGrey[500], 0.15);\r\nconst mainWindowBackground = '#fff';\r\n\r\nconst styles = {\r\n\r\n    b_AccentPrimary: {\r\n        color: amber[500],\r\n        borderColor: 'rgb(1,1,1,0)',\r\n        '&:hover': {\r\n            borderColor: amber[500],\r\n        },\r\n    },\r\n\r\n    b_AccentSecondary: {\r\n        color: blueGrey[300],\r\n        borderColor: 'rgb(1,1,1,0)',\r\n        '&:hover': {\r\n            borderColor: blueGrey[300],\r\n        }\r\n    },\r\n\r\n    b_Introduction: {\r\n        color: darkBlue,\r\n        borderColor: blueGrey[300],\r\n        '&:hover': {\r\n            borderColor: amber[500],\r\n        }\r\n    },\r\n\r\n    b_MainWindow: {\r\n        color: darkBlue,\r\n        borderColor: mainWindowBackground,\r\n        backgroundColor: blueGrey[50],\r\n        '&:hover': {\r\n            borderColor: amber[500],\r\n            backgroundColor: blueGrey[50],\r\n        }\r\n    },\r\n\r\n    b_AccountCircle: {\r\n        color: blueGrey[300],\r\n        '&:hover': {\r\n            backgroundColor: blueGreyFade,\r\n        }\r\n    },\r\n\r\n    b_MenuIcon: {\r\n        color: blueGrey[300],\r\n        '&:hover': {\r\n            backgroundColor: blueGreyFade,\r\n        }\r\n    },\r\n\r\n    divider: {\r\n        marginTop: '10px',\r\n        marginBottom: '10px',\r\n        marginRight: '10px',\r\n        marginLeft: '10px',\r\n        backgroundColor: blueGrey[300],\r\n        '&.MuiDivider-vertical': {\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n        }\r\n    },\r\n\r\n    headerMenu: {\r\n        color: blueGrey[300],\r\n        backgroundColor: darkBlue,\r\n        marginTop: '14px',\r\n        marginRight: '3px',\r\n        '& .MuiMenuItem-root': {\r\n            '&:hover': {\r\n                backgroundColor: blueGreyFade,\r\n            }\r\n        }\r\n    },\r\n\r\n    formContent: {\r\n        '& .MuiFormControl-root': {\r\n            marginTop: '10px',\r\n            marginBottom: '10px',\r\n        },\r\n    },\r\n\r\n    secondary: {\r\n        color: blueGrey[300],\r\n    },\r\n\r\n    mainBackground: {\r\n        zIndex: 0,\r\n        width: '60%',\r\n        height: '70%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        borderColor: darkBlue,\r\n    },\r\n\r\n};\r\n\r\nexport default styles;","import { createTheme } from \"@material-ui/core\";\r\nimport { amber, blueGrey } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createTheme({\r\n\r\n    palette: {\r\n        primary: {\r\n            main: amber[600]\r\n        },\r\n        secondary: {\r\n            main: '#2f3847'\r\n        }\r\n    },\r\n\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'none',\r\n                fontSize: 18,\r\n                fontFamily: ['Century Gothic, Futura, sans-serif'].join(),\r\n            }\r\n        },\r\n        MuiMenuItem: {\r\n            root: {\r\n                textTransform: 'none',\r\n                fontSize: 18,\r\n                fontFamily: ['Century Gothic, Futura, sans-serif'].join(),\r\n                justifyContent: 'flex-end',\r\n\r\n            }\r\n        },\r\n        MuiTooltip: {\r\n            arrow: {\r\n                color: '#2f3847',\r\n            },\r\n            tooltip: {\r\n                textAlign: 'center',\r\n                color: blueGrey[300],\r\n                backgroundColor: '#2f3847',\r\n                fontSize: 18,\r\n                fontFamily: ['Century Gothic, Futura, sans-serif'].join(),\r\n            }\r\n        },\r\n    },\r\n\r\n});\r\n\r\nexport default theme;","import { ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MainWindowController } from './Components/Window/MainWindowController';\r\nimport './index.css';\r\nimport styles from './Styles';\r\nimport theme from './Theme';\r\n\r\n\r\nclass Title extends React.Component {\r\n  render() {\r\n    return(<body className=\"maintitle\">ruffmix</body>);\r\n  }\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      };\r\n      this._isMounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n    const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <main className=\"main-panel\">\r\n                    <div>\r\n                        <MainWindowController styleProviderClass={classes}/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StyledApp = withStyles(styles)(App);\r\n\r\nReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n        <StyledApp />\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}